{"version":3,"file":"contact-page.svelte.7aa89b20.js","sources":["../../../../../../node_modules/sveltestrap/src/Label.svelte","../../../../../../src/routes/contact/+page.svelte"],"sourcesContent":["<script>\n  import classnames from './utils';\n\n  import { getColumnSizeClass, isObject } from './utils';\n\n  let className = '';\n\n  export { className as class };\n  export let hidden = false;\n  export let check = false;\n  export let size = '';\n  export let fore = null;\n  export { fore as for };\n  export let xs = '';\n  export let sm = '';\n  export let md = '';\n  export let lg = '';\n  export let xl = '';\n  export let xxl = '';\n\n  const colWidths = {\n    xs,\n    sm,\n    md,\n    lg,\n    xl,\n    xxl\n  };\n  export let widths = Object.keys(colWidths);\n\n  const colClasses = [];\n\n  widths.forEach((colWidth) => {\n    let columnProp = $$props[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    const isXs = colWidth === 'xs';\n    let colClass;\n\n    if (isObject(columnProp)) {\n      const colSizeInterfix = isXs ? '-' : `-${colWidth}-`;\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n\n      colClasses.push(\n        classnames({\n          [colClass]: columnProp.size || columnProp.size === '',\n          [`order${colSizeInterfix}${columnProp.order}`]:\n            columnProp.order || columnProp.order === 0,\n          [`offset${colSizeInterfix}${columnProp.offset}`]:\n            columnProp.offset || columnProp.offset === 0\n        })\n      );\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n\n  $: classes = classnames(\n    className,\n    hidden ? 'visually-hidden' : false,\n    check ? 'form-check-label' : false,\n    size ? `col-form-label-${size}` : false,\n    colClasses,\n    colClasses.length ? 'col-form-label' : 'form-label'\n  );\n</script>\n\n<label {...$$restProps} class={classes} for={fore}>\n  <slot />\n</label>\n","<script lang=\"ts\">\n    export let data;\n    import { Form, FormGroup, Input, Label } from 'sveltestrap';\n    import { Button } from 'sveltestrap';\n    const color = 'primary';\n    import { Col, Container, Row } from 'sveltestrap';\n    console.log(data);\n    let featuredimage = data.data.attributes.featuredimage.data.attributes.url;\n    let phone = data.data.attributes.phone;\n    let fax = data.data.attributes.fax;\n    let office_address = data.data.attributes.office_address;\n    let mailing_address = data.data.attributes.mailing_address;\n    let map_url = data.data.attributes.map_url;\n    let facebook = data.data.attributes.facebook;\n    let twitter = data.data.attributes.twitter;\n    let youtube = data.data.attributes.youtube;\n    let houzz = data.data.attributes.youtube;\n    let name = ''\n    let email = ''\n    let subject = ''\n    let message = ''\n    let result = ''\n    async function doContact () {\n        const url = 'https://strapi.ulfbuilt.com:1337/api/contact-forms';\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'POST',\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer  ec0d6b5aece1773cbd6e5f48756c70d9b0b3a59a4d1c325a2e699c1c1b1cae0980dc56aa2c3dfd565237b2a00db9a547a1a9e54a86f80697b31766e6bf80257b37760df84c70b534edeb4df0bdde9452777a52a757850d7a82c28dba854776c405f20ef3fbd95c72b759280f375f69191f2ca75d69600ea9584d8b2100309072' },\n\t\t\tbody: JSON.stringify({\n                data:{\n                \"name\": name,\n                \"email\": email,\n                \"subject\": subject,\n                \"message\": message\n                }\n\t\t\t})\n\t\t})\n\t\tconst json = await res.json()\n        if(json.error){\n            result = json.error.message\n        }else{\n            result = 'Processing...'\n\n\n\n        const url2 = 'https://strapi.ulfbuilt.com:1337/api/email/';\n\t\tconst res2 = await fetch(url2, {\n\t\t\tmethod: 'POST',\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer  ec0d6b5aece1773cbd6e5f48756c70d9b0b3a59a4d1c325a2e699c1c1b1cae0980dc56aa2c3dfd565237b2a00db9a547a1a9e54a86f80697b31766e6bf80257b37760df84c70b534edeb4df0bdde9452777a52a757850d7a82c28dba854776c405f20ef3fbd95c72b759280f375f69191f2ca75d69600ea9584d8b2100309072' },\n            body: JSON.stringify({\n                \"to\": \"parth@wpsuperheroes.com\",\n                \"subject\": \"* Website * \" + name + \" Subject : \" + subject,\n                \"html\": \"<h1>\"+name+\"</h1><p>\"+email+\"</p><p>\"+subject+\"</p>\",\n            })\n\t\t})\n\t\tconst json2 = await res2.json()\n        if(json2.error){\n            result = json2.error.message\n        }else{\n            result = 'Thank you for contacting us. We will reach you soon.'\n        }\n\n\n        }\n\t}\n</script>\n<svelte:head>\n\t<title>Contact us</title>\n\t<meta name=\"description\" content=\"ULF BUILT\" />\n</svelte:head>\n<div class=\"contact-1 container-fluid\" style=\"background-image:url(https://strapi.ulfbuilt.com:1337{featuredimage})\">\n    <Container>\n        <Row>\n            <Col md=\"4\" style=\"text-align:right;padding-top: 150px;padding-right: 50px;color: #fff;\">\n            <h3>PHONE</h3>\n            <p>{phone}</p>\n            <h3>FAX</h3>\n            <p>{fax}</p>\n            <h3>OUR OFFICE</h3>\n            <p><a href=\"{map_url}\" target=\"_blank\" rel=\"noreferrer\">{office_address}</a></p>\n            <h3><a href=\"{map_url}\" target=\"_blank\" rel=\"noreferrer\">Map to our office</a></h3>\n            </Col>\n            <Col md=\"4\" class=\"contact-form\">\n                <h2>GET IN TOUCH WITH US</h2>\n                <p>We are here to provide you with more info, and answer any questions you may have.</p>\n                <Form method=\"post\">\n                    <FormGroup>\n                        <Label for=\"yourName\">Your Name</Label>\n                        <Input placeholder=\"Your Name\" bind:value={name} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"yourEmail\">Your Email</Label>\n                        <Input type=\"email\" placeholder=\"Your Email\" bind:value={email} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"yourSubject\">Your Subject</Label>\n                        <Input placeholder=\"Your Subject\" bind:value={subject} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"yourMessage\">Your Message</Label>\n                        <Input type=\"textarea\" id=\"yourMessage\" placeholder=\"Your Message\" bind:value={message}/>\n                    </FormGroup>\n                    <Button type=\"button\" {color} on:click={doContact}>Send</Button>\n                </Form>\n                {result}\n            </Col>\n            <Col md=\"4\" style=\"padding-top: 200px;padding-left: 50px;color: #fff;\">\n            <h3>Mailing Address</h3>\n            <p>{mailing_address}</p>\n            <h3>Find us on</h3>\n            <p><a href=\"{facebook}\">Facebook</a>, <a href=\"{twitter}\">Twitter</a>, <a href=\"{youtube}\">Youtube</a></p>\n            <h3><a href=\"{houzz}\">Houzz</a></h3>\n            </Col>\n        </Row>\n    </Container>\n</div>\n<style lang=\"scss\">\n    a,a:hover{\n        color:#fff;\n    }\n</style>"],"names":["ctx","insert_hydration","target","label","anchor","className","$$props","hidden","check","size","fore","xs","sm","md","lg","xl","xxl","colWidths","widths","colClasses","colWidth","columnProp","isXs","colClass","isObject","colSizeInterfix","getColumnSizeClass","classnames","$$invalidate","classes","h30","p0","h31","p1","h32","p2","append_hydration","a0","h33","a1","h2","p","a2","a3","meta","div","color","data","featuredimage","phone","fax","office_address","mailing_address","map_url","facebook","twitter","youtube","houzz","name","email","subject","message","result","doContact","json","json2","value"],"mappings":"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"}