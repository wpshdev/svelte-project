{"version":3,"file":"start-e3df4280.js","sources":["../../../../../node_modules/@sveltejs/kit/src/utils/url.js","../../../../../node_modules/@sveltejs/kit/src/runtime/hash.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/fetcher.js","../../../../../node_modules/@sveltejs/kit/src/utils/routing.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/parse.js","../../../../generated/root.svelte","../../../../generated/client-matchers.js","../../../../generated/client-manifest.js","../../../../../node_modules/@sveltejs/kit/src/runtime/control.js","../../../../../node_modules/@sveltejs/kit/src/utils/promises.js","../../../../../node_modules/devalue/src/utils.js","../../../../../node_modules/devalue/src/constants.js","../../../../../node_modules/devalue/src/parse.js","../../../../../node_modules/@sveltejs/kit/src/utils/array.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/client.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/start.js"],"sourcesContent":["import { BROWSER } from 'esm-env';\n\nconst absolute = /^([a-z]+:)?\\/?\\//;\nconst scheme = /^[a-z]+:/;\n\n/**\n * @param {string} base\n * @param {string} path\n */\nexport function resolve(base, path) {\n\tif (scheme.test(path)) return path;\n\tif (path[0] === '#') return base + path;\n\n\tconst base_match = absolute.exec(base);\n\tconst path_match = absolute.exec(path);\n\n\tif (!base_match) {\n\t\tthrow new Error(`bad base path: \"${base}\"`);\n\t}\n\n\tconst baseparts = path_match ? [] : base.slice(base_match[0].length).split('/');\n\tconst pathparts = path_match ? path.slice(path_match[0].length).split('/') : path.split('/');\n\n\tbaseparts.pop();\n\n\tfor (let i = 0; i < pathparts.length; i += 1) {\n\t\tconst part = pathparts[i];\n\t\tif (part === '.') continue;\n\t\telse if (part === '..') baseparts.pop();\n\t\telse baseparts.push(part);\n\t}\n\n\tconst prefix = (path_match && path_match[0]) || (base_match && base_match[0]) || '';\n\n\treturn `${prefix}${baseparts.join('/')}`;\n}\n\n/** @param {string} path */\nexport function is_root_relative(path) {\n\treturn path[0] === '/' && path[1] !== '/';\n}\n\n/**\n * @param {string} path\n * @param {import('types').TrailingSlash} trailing_slash\n */\nexport function normalize_path(path, trailing_slash) {\n\tif (path === '/' || trailing_slash === 'ignore') return path;\n\n\tif (trailing_slash === 'never') {\n\t\treturn path.endsWith('/') ? path.slice(0, -1) : path;\n\t} else if (trailing_slash === 'always' && !path.endsWith('/')) {\n\t\treturn path + '/';\n\t}\n\n\treturn path;\n}\n\n/**\n * Decode pathname excluding %25 to prevent further double decoding of params\n * @param {string} pathname\n */\nexport function decode_pathname(pathname) {\n\treturn pathname.split('%25').map(decodeURI).join('%25');\n}\n\n/** @param {Record<string, string>} params */\nexport function decode_params(params) {\n\tfor (const key in params) {\n\t\t// input has already been decoded by decodeURI\n\t\t// now handle the rest\n\t\tparams[key] = decodeURIComponent(params[key]);\n\t}\n\n\treturn params;\n}\n\n/**\n * URL properties that could change during the lifetime of the page,\n * which excludes things like `origin`\n * @type {Array<keyof URL>}\n */\nconst tracked_url_properties = ['href', 'pathname', 'search', 'searchParams', 'toString', 'toJSON'];\n\n/**\n * @param {URL} url\n * @param {() => void} callback\n */\nexport function make_trackable(url, callback) {\n\tconst tracked = new URL(url);\n\n\tfor (const property of tracked_url_properties) {\n\t\tlet value = tracked[property];\n\n\t\tObject.defineProperty(tracked, property, {\n\t\t\tget() {\n\t\t\t\tcallback();\n\t\t\t\treturn value;\n\t\t\t},\n\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true\n\t\t});\n\t}\n\n\tif (!BROWSER) {\n\t\t// @ts-ignore\n\t\ttracked[Symbol.for('nodejs.util.inspect.custom')] = (depth, opts, inspect) => {\n\t\t\treturn inspect(url, opts);\n\t\t};\n\t}\n\n\tdisable_hash(tracked);\n\n\treturn tracked;\n}\n\n/**\n * Disallow access to `url.hash` on the server and in `load`\n * @param {URL} url\n */\nexport function disable_hash(url) {\n\tObject.defineProperty(url, 'hash', {\n\t\tget() {\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot access event.url.hash. Consider using `$page.url.hash` inside a component instead'\n\t\t\t);\n\t\t}\n\t});\n}\n\n/**\n * Disallow access to `url.search` and `url.searchParams` during prerendering\n * @param {URL} url\n */\nexport function disable_search(url) {\n\tfor (const property of ['search', 'searchParams']) {\n\t\tObject.defineProperty(url, property, {\n\t\t\tget() {\n\t\t\t\tthrow new Error(`Cannot access url.${property} on a page with prerendering enabled`);\n\t\t\t}\n\t\t});\n\t}\n}\n\nconst DATA_SUFFIX = '/__data.json';\n\n/** @param {string} pathname */\nexport function has_data_suffix(pathname) {\n\treturn pathname.endsWith(DATA_SUFFIX);\n}\n\n/** @param {string} pathname */\nexport function add_data_suffix(pathname) {\n\treturn pathname.replace(/\\/$/, '') + DATA_SUFFIX;\n}\n\n/** @param {string} pathname */\nexport function strip_data_suffix(pathname) {\n\treturn pathname.slice(0, -DATA_SUFFIX.length);\n}\n","/**\n * Hash using djb2\n * @param {import('types').StrictBody} value\n */\nexport function hash(value) {\n\tlet hash = 5381;\n\n\tif (typeof value === 'string') {\n\t\tlet i = value.length;\n\t\twhile (i) hash = (hash * 33) ^ value.charCodeAt(--i);\n\t} else if (ArrayBuffer.isView(value)) {\n\t\tconst buffer = new Uint8Array(value.buffer, value.byteOffset, value.byteLength);\n\t\tlet i = buffer.length;\n\t\twhile (i) hash = (hash * 33) ^ buffer[--i];\n\t} else {\n\t\tthrow new TypeError('value must be a string or TypedArray');\n\t}\n\n\treturn (hash >>> 0).toString(36);\n}\n","import { DEV } from 'esm-env';\nimport { hash } from '../hash.js';\n\nlet loading = 0;\n\nexport const native_fetch = window.fetch;\n\nexport function lock_fetch() {\n\tloading += 1;\n}\n\nexport function unlock_fetch() {\n\tloading -= 1;\n}\n\nif (DEV) {\n\tlet can_inspect_stack_trace = false;\n\n\tconst check_stack_trace = async () => {\n\t\tconst stack = /** @type {string} */ (new Error().stack);\n\t\tcan_inspect_stack_trace = stack.includes('check_stack_trace');\n\t};\n\n\tcheck_stack_trace();\n\n\twindow.fetch = (input, init) => {\n\t\t// Check if fetch was called via load_node. the lock method only checks if it was called at the\n\t\t// same time, but not necessarily if it was called from `load`.\n\t\t// We use just the filename as the method name sometimes does not appear on the CI.\n\t\tconst url = input instanceof Request ? input.url : input.toString();\n\t\tconst stack_array = /** @type {string} */ (new Error().stack).split('\\n');\n\t\t// We need to do some Firefox-specific cutoff because it (impressively) maintains the stack\n\t\t// across events and for example traces a `fetch` call triggered from a button back\n\t\t// to the creation of the event listener and the element creation itself,\n\t\t// where at some point client.js will show up, leading to false positives.\n\t\tconst firefox_cutoff = stack_array.findIndex((a) => a.includes('*listen@'));\n\t\tconst stack = stack_array\n\t\t\t.slice(0, firefox_cutoff !== -1 ? firefox_cutoff : undefined)\n\t\t\t.join('\\n');\n\n\t\tconst heuristic = can_inspect_stack_trace\n\t\t\t? stack.includes('src/runtime/client/client.js')\n\t\t\t: loading;\n\t\tif (heuristic) {\n\t\t\tconsole.warn(\n\t\t\t\t`Loading ${url} using \\`window.fetch\\`. For best results, use the \\`fetch\\` that is passed to your \\`load\\` function: https://kit.svelte.dev/docs/load#making-fetch-requests`\n\t\t\t);\n\t\t}\n\n\t\tconst method = input instanceof Request ? input.method : init?.method || 'GET';\n\n\t\tif (method !== 'GET') {\n\t\t\tcache.delete(build_selector(input));\n\t\t}\n\n\t\treturn native_fetch(input, init);\n\t};\n} else {\n\twindow.fetch = (input, init) => {\n\t\tconst method = input instanceof Request ? input.method : init?.method || 'GET';\n\n\t\tif (method !== 'GET') {\n\t\t\tcache.delete(build_selector(input));\n\t\t}\n\n\t\treturn native_fetch(input, init);\n\t};\n}\n\nconst cache = new Map();\n\n/**\n * Should be called on the initial run of load functions that hydrate the page.\n * Saves any requests with cache-control max-age to the cache.\n * @param {URL | string} resource\n * @param {RequestInit} [opts]\n */\nexport function initial_fetch(resource, opts) {\n\tconst selector = build_selector(resource, opts);\n\n\tconst script = document.querySelector(selector);\n\tif (script?.textContent) {\n\t\tconst { body, ...init } = JSON.parse(script.textContent);\n\n\t\tconst ttl = script.getAttribute('data-ttl');\n\t\tif (ttl) cache.set(selector, { body, init, ttl: 1000 * Number(ttl) });\n\n\t\treturn Promise.resolve(new Response(body, init));\n\t}\n\n\treturn native_fetch(resource, opts);\n}\n\n/**\n * Tries to get the response from the cache, if max-age allows it, else does a fetch.\n * @param {URL | string} resource\n * @param {string} resolved\n * @param {RequestInit} [opts]\n */\nexport function subsequent_fetch(resource, resolved, opts) {\n\tif (cache.size > 0) {\n\t\tconst selector = build_selector(resource, opts);\n\t\tconst cached = cache.get(selector);\n\t\tif (cached) {\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Request/cache#value\n\t\t\tif (\n\t\t\t\tperformance.now() < cached.ttl &&\n\t\t\t\t['default', 'force-cache', 'only-if-cached', undefined].includes(opts?.cache)\n\t\t\t) {\n\t\t\t\treturn new Response(cached.body, cached.init);\n\t\t\t}\n\n\t\t\tcache.delete(selector);\n\t\t}\n\t}\n\n\treturn native_fetch(resolved, opts);\n}\n\n/**\n * Build the cache key for a given request\n * @param {URL | RequestInfo} resource\n * @param {RequestInit} [opts]\n */\nfunction build_selector(resource, opts) {\n\tconst url = JSON.stringify(resource instanceof Request ? resource.url : resource);\n\n\tlet selector = `script[data-sveltekit-fetched][data-url=${url}]`;\n\n\tif (opts?.body && (typeof opts.body === 'string' || ArrayBuffer.isView(opts.body))) {\n\t\tselector += `[data-hash=\"${hash(opts.body)}\"]`;\n\t}\n\n\treturn selector;\n}\n","const param_pattern = /^(\\[)?(\\.\\.\\.)?(\\w+)(?:=(\\w+))?(\\])?$/;\n\n/**\n * Creates the regex pattern, extracts parameter names, and generates types for a route\n * @param {string} id\n */\nexport function parse_route_id(id) {\n\t/** @type {import('types').RouteParam[]} */\n\tconst params = [];\n\n\tconst pattern =\n\t\tid === '/'\n\t\t\t? /^\\/$/\n\t\t\t: new RegExp(\n\t\t\t\t\t`^${get_route_segments(id)\n\t\t\t\t\t\t.map((segment) => {\n\t\t\t\t\t\t\t// special case — /[...rest]/ could contain zero segments\n\t\t\t\t\t\t\tconst rest_match = /^\\[\\.\\.\\.(\\w+)(?:=(\\w+))?\\]$/.exec(segment);\n\t\t\t\t\t\t\tif (rest_match) {\n\t\t\t\t\t\t\t\tparams.push({\n\t\t\t\t\t\t\t\t\tname: rest_match[1],\n\t\t\t\t\t\t\t\t\tmatcher: rest_match[2],\n\t\t\t\t\t\t\t\t\toptional: false,\n\t\t\t\t\t\t\t\t\trest: true,\n\t\t\t\t\t\t\t\t\tchained: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn '(?:/(.*))?';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// special case — /[[optional]]/ could contain zero segments\n\t\t\t\t\t\t\tconst optional_match = /^\\[\\[(\\w+)(?:=(\\w+))?\\]\\]$/.exec(segment);\n\t\t\t\t\t\t\tif (optional_match) {\n\t\t\t\t\t\t\t\tparams.push({\n\t\t\t\t\t\t\t\t\tname: optional_match[1],\n\t\t\t\t\t\t\t\t\tmatcher: optional_match[2],\n\t\t\t\t\t\t\t\t\toptional: true,\n\t\t\t\t\t\t\t\t\trest: false,\n\t\t\t\t\t\t\t\t\tchained: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn '(?:/([^/]+))?';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!segment) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst parts = segment.split(/\\[(.+?)\\](?!\\])/);\n\t\t\t\t\t\t\tconst result = parts\n\t\t\t\t\t\t\t\t.map((content, i) => {\n\t\t\t\t\t\t\t\t\tif (i % 2) {\n\t\t\t\t\t\t\t\t\t\tif (content.startsWith('x+')) {\n\t\t\t\t\t\t\t\t\t\t\treturn escape(String.fromCharCode(parseInt(content.slice(2), 16)));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (content.startsWith('u+')) {\n\t\t\t\t\t\t\t\t\t\t\treturn escape(\n\t\t\t\t\t\t\t\t\t\t\t\tString.fromCharCode(\n\t\t\t\t\t\t\t\t\t\t\t\t\t...content\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.slice(2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.split('-')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.map((code) => parseInt(code, 16))\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tconst match = param_pattern.exec(content);\n\t\t\t\t\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\t\t\t`Invalid param: ${content}. Params and matcher names can only have underscores and alphanumeric characters.`\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tconst [, is_optional, is_rest, name, matcher] = match;\n\t\t\t\t\t\t\t\t\t\t// It's assumed that the following invalid route id cases are already checked\n\t\t\t\t\t\t\t\t\t\t// - unbalanced brackets\n\t\t\t\t\t\t\t\t\t\t// - optional param following rest param\n\n\t\t\t\t\t\t\t\t\t\tparams.push({\n\t\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\t\tmatcher,\n\t\t\t\t\t\t\t\t\t\t\toptional: !!is_optional,\n\t\t\t\t\t\t\t\t\t\t\trest: !!is_rest,\n\t\t\t\t\t\t\t\t\t\t\tchained: is_rest ? i === 1 && parts[0] === '' : false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\treturn is_rest ? '(.*?)' : is_optional ? '([^/]*)?' : '([^/]+?)';\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn escape(content);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.join('');\n\n\t\t\t\t\t\t\treturn '/' + result;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join('')}/?$`\n\t\t\t  );\n\n\treturn { pattern, params };\n}\n\n/**\n * Returns `false` for `(group)` segments\n * @param {string} segment\n */\nfunction affects_path(segment) {\n\treturn !/^\\([^)]+\\)$/.test(segment);\n}\n\n/**\n * Splits a route id into its segments, removing segments that\n * don't affect the path (i.e. groups). The root route is represented by `/`\n * and will be returned as `['']`.\n * @param {string} route\n * @returns string[]\n */\nexport function get_route_segments(route) {\n\treturn route.slice(1).split('/').filter(affects_path);\n}\n\n/**\n * @param {RegExpMatchArray} match\n * @param {import('types').RouteParam[]} params\n * @param {Record<string, import('types').ParamMatcher>} matchers\n */\nexport function exec(match, params, matchers) {\n\t/** @type {Record<string, string>} */\n\tconst result = {};\n\n\tconst values = match.slice(1);\n\n\tlet buffered = '';\n\n\tfor (let i = 0; i < params.length; i += 1) {\n\t\tconst param = params[i];\n\t\tlet value = values[i];\n\n\t\tif (param.chained && param.rest && buffered) {\n\t\t\t// in the `[[lang=lang]]/[...rest]` case, if `lang` didn't\n\t\t\t// match, we roll it over into the rest value\n\t\t\tvalue = value ? buffered + '/' + value : buffered;\n\t\t}\n\n\t\tbuffered = '';\n\n\t\tif (value === undefined) {\n\t\t\t// if `value` is undefined, it means this is\n\t\t\t// an optional or rest parameter\n\t\t\tif (param.rest) result[param.name] = '';\n\t\t} else {\n\t\t\tif (param.matcher && !matchers[param.matcher](value)) {\n\t\t\t\t// in the `/[[a=b]]/[[c=d]]` case, if the value didn't satisfy the `b` matcher,\n\t\t\t\t// try again with the next segment by shifting values rightwards\n\t\t\t\tif (param.optional && param.chained) {\n\t\t\t\t\t// @ts-expect-error TypeScript is... wrong\n\t\t\t\t\tlet j = values.indexOf(undefined, i);\n\n\t\t\t\t\tif (j === -1) {\n\t\t\t\t\t\t// we can't shift values any further, so hang on to this value\n\t\t\t\t\t\t// so it can be rolled into a subsequent `[...rest]` param\n\t\t\t\t\t\tconst next = params[i + 1];\n\t\t\t\t\t\tif (next?.rest && next.chained) {\n\t\t\t\t\t\t\tbuffered = value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (j >= i) {\n\t\t\t\t\t\tvalues[j] = values[j - 1];\n\t\t\t\t\t\tj -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// otherwise, if the matcher returns `false`, the route did not match\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresult[param.name] = value;\n\t\t}\n\t}\n\n\tif (buffered) return;\n\treturn result;\n}\n\n/** @param {string} str */\nfunction escape(str) {\n\treturn (\n\t\tstr\n\t\t\t.normalize()\n\t\t\t// escape [ and ] before escaping other characters, since they are used in the replacements\n\t\t\t.replace(/[[\\]]/g, '\\\\$&')\n\t\t\t// replace %, /, ? and # with their encoded versions because decode_pathname leaves them untouched\n\t\t\t.replace(/%/g, '%25')\n\t\t\t.replace(/\\//g, '%2[Ff]')\n\t\t\t.replace(/\\?/g, '%3[Ff]')\n\t\t\t.replace(/#/g, '%23')\n\t\t\t// escape characters that have special meaning in regex\n\t\t\t.replace(/[.*+?^${}()|\\\\]/g, '\\\\$&')\n\t);\n}\n","import { exec, parse_route_id } from '../../utils/routing.js';\n\n/**\n * @param {import('types').CSRPageNodeLoader[]} nodes\n * @param {number[]} server_loads\n * @param {typeof import('__GENERATED__/client-manifest.js').dictionary} dictionary\n * @param {Record<string, (param: string) => boolean>} matchers\n * @returns {import('types').CSRRoute[]}\n */\nexport function parse(nodes, server_loads, dictionary, matchers) {\n\tconst layouts_with_server_load = new Set(server_loads);\n\n\treturn Object.entries(dictionary).map(([id, [leaf, layouts, errors]]) => {\n\t\tconst { pattern, params } = parse_route_id(id);\n\n\t\tconst route = {\n\t\t\tid,\n\t\t\t/** @param {string} path */\n\t\t\texec: (path) => {\n\t\t\t\tconst match = pattern.exec(path);\n\t\t\t\tif (match) return exec(match, params, matchers);\n\t\t\t},\n\t\t\terrors: [1, ...(errors || [])].map((n) => nodes[n]),\n\t\t\tlayouts: [0, ...(layouts || [])].map(create_layout_loader),\n\t\t\tleaf: create_leaf_loader(leaf)\n\t\t};\n\n\t\t// bit of a hack, but ensures that layout/error node lists are the same\n\t\t// length, without which the wrong data will be applied if the route\n\t\t// manifest looks like `[[a, b], [c,], d]`\n\t\troute.errors.length = route.layouts.length = Math.max(\n\t\t\troute.errors.length,\n\t\t\troute.layouts.length\n\t\t);\n\n\t\treturn route;\n\t});\n\n\t/**\n\t * @param {number} id\n\t * @returns {[boolean, import('types').CSRPageNodeLoader]}\n\t */\n\tfunction create_leaf_loader(id) {\n\t\t// whether or not the route uses the server data is\n\t\t// encoded using the ones' complement, to save space\n\t\tconst uses_server_data = id < 0;\n\t\tif (uses_server_data) id = ~id;\n\t\treturn [uses_server_data, nodes[id]];\n\t}\n\n\t/**\n\t * @param {number | undefined} id\n\t * @returns {[boolean, import('types').CSRPageNodeLoader] | undefined}\n\t */\n\tfunction create_layout_loader(id) {\n\t\t// whether or not the layout uses the server data is\n\t\t// encoded in the layouts array, to save space\n\t\treturn id === undefined ? id : [layouts_with_server_load.has(id), nodes[id]];\n\t}\n}\n","<!-- This file is generated by @sveltejs/kit — do not edit it! -->\n<script>\n\timport { setContext, afterUpdate, onMount } from 'svelte';\n\timport { browser } from '$app/environment';\n\n\t// stores\n\texport let stores;\n\texport let page;\n\n\texport let components;\n\texport let form;\n\texport let data_0 = null;\n\texport let data_1 = null;\n\texport let data_2 = null;\n\texport let data_3 = null;\n\n\tif (!browser) {\n\t\tsetContext('__svelte__', stores);\n\t}\n\n\t$: stores.page.set(page);\n\tafterUpdate(stores.page.notify);\n\n\tlet mounted = false;\n\tlet navigated = false;\n\tlet title = null;\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n</script>\n\n{#if components[1]}\n\t<svelte:component this={components[0]} data={data_0}>\n\t\t{#if components[2]}\n\t\t\t<svelte:component this={components[1]} data={data_1}>\n\t\t\t\t{#if components[3]}\n\t\t\t\t\t<svelte:component this={components[2]} data={data_2}>\n\t\t\t\t\t\t<svelte:component this={components[3]} data={data_3} {form} />\n\t\t\t\t\t</svelte:component>\n\t\t\t\t{:else}\n\t\t\t\t\t<svelte:component this={components[2]} data={data_2} {form} />\n\t\t\t\t{/if}\n\t\t\t</svelte:component>\n\t\t{:else}\n\t\t\t<svelte:component this={components[1]} data={data_1} {form} />\n\t\t{/if}\n\t</svelte:component>\n{:else}\n\t<svelte:component this={components[0]} data={data_0} {form} />\n{/if}\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\" style=\"position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}","export const matchers = {};","export { matchers } from './client-matchers.js';\n\nexport const nodes = [() => import('./nodes/0'),\n\t() => import('./nodes/1'),\n\t() => import('./nodes/2'),\n\t() => import('./nodes/3'),\n\t() => import('./nodes/4'),\n\t() => import('./nodes/5'),\n\t() => import('./nodes/6'),\n\t() => import('./nodes/7'),\n\t() => import('./nodes/8'),\n\t() => import('./nodes/9'),\n\t() => import('./nodes/10'),\n\t() => import('./nodes/11'),\n\t() => import('./nodes/12'),\n\t() => import('./nodes/13'),\n\t() => import('./nodes/14'),\n\t() => import('./nodes/15'),\n\t() => import('./nodes/16'),\n\t() => import('./nodes/17'),\n\t() => import('./nodes/18'),\n\t() => import('./nodes/19')];\n\nexport const server_loads = [0];\n\nexport const dictionary = {\n\t\"/\": [~8],\n\t\"/about\": [~9],\n\t\"/blog\": [~10,[2]],\n\t\"/blog/[slug]\": [~11,[2]],\n\t\"/contact\": [~12,[3]],\n\t\"/our-team\": [~13],\n\t\"/our-team/[slug]\": [~14],\n\t\"/page\": [15,[4]],\n\t\"/page/[slug]\": [~16,[4,5]],\n\t\"/portfolio\": [17,[6]],\n\t\"/portfolio/[slug]\": [18,[6]],\n\t\"/privacy\": [19,[7]]\n};\n\nexport const hooks = {\n\thandleError: (({ error }) => { console.error(error) }),\n};","export let HttpError = class HttpError {\n\t/**\n\t * @param {number} status\n\t * @param {{message: string} extends App.Error ? (App.Error | string | undefined) : App.Error} body\n\t */\n\tconstructor(status, body) {\n\t\tthis.status = status;\n\t\tif (typeof body === 'string') {\n\t\t\tthis.body = { message: body };\n\t\t} else if (body) {\n\t\t\tthis.body = body;\n\t\t} else {\n\t\t\tthis.body = { message: `Error: ${status}` };\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this.body);\n\t}\n};\n\nexport let Redirect = class Redirect {\n\t/**\n\t * @param {300 | 301 | 302 | 303 | 304 | 305 | 306 | 307 | 308} status\n\t * @param {string} location\n\t */\n\tconstructor(status, location) {\n\t\tthis.status = status;\n\t\tthis.location = location;\n\t}\n};\n\n/**\n * @template {Record<string, unknown> | undefined} [T=undefined]\n */\nexport let ActionFailure = class ActionFailure {\n\t/**\n\t * @param {number} status\n\t * @param {T} [data]\n\t */\n\tconstructor(status, data) {\n\t\tthis.status = status;\n\t\tthis.data = data;\n\t}\n};\n\n/**\n * This is a grotesque hack that, in dev, allows us to replace the implementations\n * of these classes that you'd get by importing them from `@sveltejs/kit` with the\n * ones that are imported via Vite and loaded internally, so that instanceof\n * checks work even though SvelteKit imports this module via Vite and consumers\n * import it via Node\n * @param {{\n *   ActionFailure: typeof ActionFailure;\n *   HttpError: typeof HttpError;\n *   Redirect: typeof Redirect;\n * }} implementations\n */\nexport function replace_implementations(implementations) {\n\tActionFailure = implementations.ActionFailure;\n\tHttpError = implementations.HttpError;\n\tRedirect = implementations.Redirect;\n}\n","/**\n * Given an object, return a new object where all top level values are awaited\n *\n * @param {Record<string, any>} object\n * @returns {Promise<Record<string, any>>}\n */\nexport async function unwrap_promises(object) {\n\tfor (const key in object) {\n\t\tif (typeof object[key]?.then === 'function') {\n\t\t\treturn Object.fromEntries(\n\t\t\t\tawait Promise.all(Object.entries(object).map(async ([key, value]) => [key, await value]))\n\t\t\t);\n\t\t}\n\t}\n\n\treturn object;\n}\n","/** @type {Record<string, string>} */\nexport const escaped = {\n\t'<': '\\\\u003C',\n\t'>': '\\\\u003E',\n\t'/': '\\\\u002F',\n\t'\\\\': '\\\\\\\\',\n\t'\\b': '\\\\b',\n\t'\\f': '\\\\f',\n\t'\\n': '\\\\n',\n\t'\\r': '\\\\r',\n\t'\\t': '\\\\t',\n\t'\\0': '\\\\u0000',\n\t'\\u2028': '\\\\u2028',\n\t'\\u2029': '\\\\u2029'\n};\n\nexport class DevalueError extends Error {\n\t/**\n\t * @param {string} message\n\t * @param {string[]} keys\n\t */\n\tconstructor(message, keys) {\n\t\tsuper(message);\n\t\tthis.name = 'DevalueError';\n\t\tthis.path = keys.join('');\n\t}\n}\n\n/** @param {any} thing */\nexport function is_primitive(thing) {\n\treturn Object(thing) !== thing;\n}\n\nconst object_proto_names = Object.getOwnPropertyNames(Object.prototype)\n\t.sort()\n\t.join('\\0');\n\n/** @param {any} thing */\nexport function is_plain_object(thing) {\n\tconst proto = Object.getPrototypeOf(thing);\n\n\treturn (\n\t\tproto === Object.prototype ||\n\t\tproto === null ||\n\t\tObject.getOwnPropertyNames(proto).sort().join('\\0') === object_proto_names\n\t);\n}\n\n/** @param {any} thing */\nexport function get_type(thing) {\n\treturn Object.prototype.toString.call(thing).slice(8, -1);\n}\n\n/** @param {string} str */\nexport function stringify_string(str) {\n\tlet result = '\"';\n\n\tfor (let i = 0; i < str.length; i += 1) {\n\t\tconst char = str.charAt(i);\n\t\tconst code = char.charCodeAt(0);\n\n\t\tif (char === '\"') {\n\t\t\tresult += '\\\\\"';\n\t\t} else if (char in escaped) {\n\t\t\tresult += escaped[char];\n\t\t} else if (code >= 0xd800 && code <= 0xdfff) {\n\t\t\tconst next = str.charCodeAt(i + 1);\n\n\t\t\t// If this is the beginning of a [high, low] surrogate pair,\n\t\t\t// add the next two characters, otherwise escape\n\t\t\tif (code <= 0xdbff && next >= 0xdc00 && next <= 0xdfff) {\n\t\t\t\tresult += char + str[++i];\n\t\t\t} else {\n\t\t\t\tresult += `\\\\u${code.toString(16).toUpperCase()}`;\n\t\t\t}\n\t\t} else {\n\t\t\tresult += char;\n\t\t}\n\t}\n\n\tresult += '\"';\n\treturn result;\n}\n","export const UNDEFINED = -1;\nexport const HOLE = -2;\nexport const NAN = -3;\nexport const POSITIVE_INFINITY = -4;\nexport const NEGATIVE_INFINITY = -5;\nexport const NEGATIVE_ZERO = -6;\n","import {\n\tHOLE,\n\tNAN,\n\tNEGATIVE_INFINITY,\n\tNEGATIVE_ZERO,\n\tPOSITIVE_INFINITY,\n\tUNDEFINED\n} from './constants.js';\n\n/**\n * Revive a value serialized with `devalue.stringify`\n * @param {string} serialized\n */\nexport function parse(serialized) {\n\treturn unflatten(JSON.parse(serialized));\n}\n\n/**\n * Revive a value flattened with `devalue.flatten`\n * @param {number | any[]} parsed\n */\nexport function unflatten(parsed) {\n\tif (typeof parsed === 'number') return hydrate(parsed, true);\n\n\tif (!Array.isArray(parsed) || parsed.length === 0) {\n\t\tthrow new Error('Invalid input');\n\t}\n\n\tconst values = /** @type {any[]} */ (parsed);\n\n\tconst hydrated = Array(values.length);\n\n\t/** @param {number} index */\n\tfunction hydrate(index, standalone = false) {\n\t\tif (index === UNDEFINED) return undefined;\n\t\tif (index === NAN) return NaN;\n\t\tif (index === POSITIVE_INFINITY) return Infinity;\n\t\tif (index === NEGATIVE_INFINITY) return -Infinity;\n\t\tif (index === NEGATIVE_ZERO) return -0;\n\n\t\tif (standalone) throw new Error(`Invalid input`);\n\n\t\tif (index in hydrated) return hydrated[index];\n\n\t\tconst value = values[index];\n\n\t\tif (!value || typeof value !== 'object') {\n\t\t\thydrated[index] = value;\n\t\t} else if (Array.isArray(value)) {\n\t\t\tif (typeof value[0] === 'string') {\n\t\t\t\tconst type = value[0];\n\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'Date':\n\t\t\t\t\t\thydrated[index] = new Date(value[1]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Set':\n\t\t\t\t\t\tconst set = new Set();\n\t\t\t\t\t\thydrated[index] = set;\n\t\t\t\t\t\tfor (let i = 1; i < value.length; i += 1) {\n\t\t\t\t\t\t\tset.add(hydrate(value[i]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Map':\n\t\t\t\t\t\tconst map = new Map();\n\t\t\t\t\t\thydrated[index] = map;\n\t\t\t\t\t\tfor (let i = 1; i < value.length; i += 2) {\n\t\t\t\t\t\t\tmap.set(hydrate(value[i]), hydrate(value[i + 1]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RegExp':\n\t\t\t\t\t\thydrated[index] = new RegExp(value[1], value[2]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\thydrated[index] = Object(value[1]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BigInt':\n\t\t\t\t\t\thydrated[index] = BigInt(value[1]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'null':\n\t\t\t\t\t\tconst obj = Object.create(null);\n\t\t\t\t\t\thydrated[index] = obj;\n\t\t\t\t\t\tfor (let i = 1; i < value.length; i += 2) {\n\t\t\t\t\t\t\tobj[value[i]] = hydrate(value[i + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst array = new Array(value.length);\n\t\t\t\thydrated[index] = array;\n\n\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\tconst n = value[i];\n\t\t\t\t\tif (n === HOLE) continue;\n\n\t\t\t\t\tarray[i] = hydrate(n);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t/** @type {Record<string, any>} */\n\t\t\tconst object = {};\n\t\t\thydrated[index] = object;\n\n\t\t\tfor (const key in value) {\n\t\t\t\tconst n = value[key];\n\t\t\t\tobject[key] = hydrate(n);\n\t\t\t}\n\t\t}\n\n\t\treturn hydrated[index];\n\t}\n\n\treturn hydrate(0);\n}\n","/**\n * Removes nullish values from an array.\n *\n * @template T\n * @param {Array<T>} arr\n */\nexport function compact(arr) {\n\treturn arr.filter(/** @returns {val is NonNullable<T>} */ (val) => val != null);\n}\n","import { DEV } from 'esm-env';\nimport { onMount, tick } from 'svelte';\nimport {\n\tmake_trackable,\n\tdecode_pathname,\n\tdecode_params,\n\tnormalize_path,\n\tadd_data_suffix\n} from '../../utils/url.js';\nimport {\n\tfind_anchor,\n\tget_base_uri,\n\tget_link_info,\n\tget_router_options,\n\tis_external_url,\n\tscroll_state\n} from './utils.js';\nimport {\n\tlock_fetch,\n\tunlock_fetch,\n\tinitial_fetch,\n\tsubsequent_fetch,\n\tnative_fetch\n} from './fetcher.js';\nimport { parse } from './parse.js';\n\nimport Root from '__GENERATED__/root.svelte';\nimport { nodes, server_loads, dictionary, matchers, hooks } from '__GENERATED__/client-manifest.js';\nimport { HttpError, Redirect } from '../control.js';\nimport { stores } from './singletons.js';\nimport { unwrap_promises } from '../../utils/promises.js';\nimport * as devalue from 'devalue';\nimport { INDEX_KEY, PRELOAD_PRIORITIES, SCROLL_KEY } from './constants.js';\nimport { validate_common_exports } from '../../utils/exports.js';\nimport { compact } from '../../utils/array.js';\n\nconst routes = parse(nodes, server_loads, dictionary, matchers);\n\nconst default_layout_loader = nodes[0];\nconst default_error_loader = nodes[1];\n\n// we import the root layout/error nodes eagerly, so that\n// connectivity errors after initialisation don't nuke the app\ndefault_layout_loader();\ndefault_error_loader();\n\n// We track the scroll position associated with each history entry in sessionStorage,\n// rather than on history.state itself, because when navigation is driven by\n// popstate it's too late to update the scroll position associated with the\n// state we're navigating from\n\n/** @typedef {{ x: number, y: number }} ScrollPosition */\n/** @type {Record<number, ScrollPosition>} */\nlet scroll_positions = {};\ntry {\n\tscroll_positions = JSON.parse(sessionStorage[SCROLL_KEY]);\n} catch {\n\t// do nothing\n}\n\n/** @param {number} index */\nfunction update_scroll_positions(index) {\n\tscroll_positions[index] = scroll_state();\n}\n\n/**\n * @param {{\n *   target: HTMLElement;\n *   base: string;\n * }} opts\n * @returns {import('./types').Client}\n */\nexport function create_client({ target, base }) {\n\tconst container = __SVELTEKIT_EMBEDDED__ ? target : document.documentElement;\n\t/** @type {Array<((url: URL) => boolean)>} */\n\tconst invalidated = [];\n\n\t/** @type {{id: string, promise: Promise<import('./types').NavigationResult>} | null} */\n\tlet load_cache = null;\n\n\tconst callbacks = {\n\t\t/** @type {Array<(navigation: import('types').BeforeNavigate) => void>} */\n\t\tbefore_navigate: [],\n\n\t\t/** @type {Array<(navigation: import('types').AfterNavigate) => void>} */\n\t\tafter_navigate: []\n\t};\n\n\t/** @type {import('./types').NavigationState} */\n\tlet current = {\n\t\tbranch: [],\n\t\terror: null,\n\t\t// @ts-ignore - we need the initial value to be null\n\t\turl: null\n\t};\n\n\t/** this being true means we SSR'd */\n\tlet hydrated = false;\n\tlet started = false;\n\tlet autoscroll = true;\n\tlet updating = false;\n\tlet navigating = false;\n\tlet hash_navigating = false;\n\n\tlet force_invalidation = false;\n\n\t/** @type {import('svelte').SvelteComponent} */\n\tlet root;\n\n\t// keeping track of the history index in order to prevent popstate navigation events if needed\n\tlet current_history_index = history.state?.[INDEX_KEY];\n\n\tif (!current_history_index) {\n\t\t// we use Date.now() as an offset so that cross-document navigations\n\t\t// within the app don't result in data loss\n\t\tcurrent_history_index = Date.now();\n\n\t\t// create initial history entry, so we can return here\n\t\thistory.replaceState(\n\t\t\t{ ...history.state, [INDEX_KEY]: current_history_index },\n\t\t\t'',\n\t\t\tlocation.href\n\t\t);\n\t}\n\n\t// if we reload the page, or Cmd-Shift-T back to it,\n\t// recover scroll position\n\tconst scroll = scroll_positions[current_history_index];\n\tif (scroll) {\n\t\thistory.scrollRestoration = 'manual';\n\t\tscrollTo(scroll.x, scroll.y);\n\t}\n\n\t/** @type {import('types').Page} */\n\tlet page;\n\n\t/** @type {{}} */\n\tlet token;\n\n\t/** @type {Promise<void> | null} */\n\tlet pending_invalidate;\n\n\tasync function invalidate() {\n\t\t// Accept all invalidations as they come, don't swallow any while another invalidation\n\t\t// is running because subsequent invalidations may make earlier ones outdated,\n\t\t// but batch multiple synchronous invalidations.\n\t\tpending_invalidate = pending_invalidate || Promise.resolve();\n\t\tawait pending_invalidate;\n\t\tpending_invalidate = null;\n\n\t\tconst url = new URL(location.href);\n\t\tconst intent = get_navigation_intent(url, true);\n\t\t// Clear preload, it might be affected by the invalidation.\n\t\t// Also solves an edge case where a preload is triggered, the navigation for it\n\t\t// was then triggered and is still running while the invalidation kicks in,\n\t\t// at which point the invalidation should take over and \"win\".\n\t\tload_cache = null;\n\t\tawait update(intent, url, []);\n\t}\n\n\t/**\n\t * @param {string | URL} url\n\t * @param {{ noScroll?: boolean; replaceState?: boolean; keepFocus?: boolean; state?: any; invalidateAll?: boolean }} opts\n\t * @param {string[]} redirect_chain\n\t * @param {{}} [nav_token]\n\t */\n\tasync function goto(\n\t\turl,\n\t\t{\n\t\t\tnoScroll = false,\n\t\t\treplaceState = false,\n\t\t\tkeepFocus = false,\n\t\t\tstate = {},\n\t\t\tinvalidateAll = false\n\t\t},\n\t\tredirect_chain,\n\t\tnav_token\n\t) {\n\t\tif (typeof url === 'string') {\n\t\t\turl = new URL(url, get_base_uri(document));\n\t\t}\n\n\t\treturn navigate({\n\t\t\turl,\n\t\t\tscroll: noScroll ? scroll_state() : null,\n\t\t\tkeepfocus: keepFocus,\n\t\t\tredirect_chain,\n\t\t\tdetails: {\n\t\t\t\tstate,\n\t\t\t\treplaceState\n\t\t\t},\n\t\t\tnav_token,\n\t\t\taccepted: () => {\n\t\t\t\tif (invalidateAll) {\n\t\t\t\t\tforce_invalidation = true;\n\t\t\t\t}\n\t\t\t},\n\t\t\tblocked: () => {},\n\t\t\ttype: 'goto'\n\t\t});\n\t}\n\n\t/** @param {URL} url */\n\tasync function preload_data(url) {\n\t\tconst intent = get_navigation_intent(url, false);\n\n\t\tif (!intent) {\n\t\t\tthrow new Error(`Attempted to preload a URL that does not belong to this app: ${url}`);\n\t\t}\n\n\t\tload_cache = {\n\t\t\tid: intent.id,\n\t\t\tpromise: load_route(intent).then((result) => {\n\t\t\t\tif (result.type === 'loaded' && result.state.error) {\n\t\t\t\t\t// Don't cache errors, because they might be transient\n\t\t\t\t\tload_cache = null;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t})\n\t\t};\n\n\t\treturn load_cache.promise;\n\t}\n\n\t/** @param {...string} pathnames */\n\tasync function preload_code(...pathnames) {\n\t\tconst matching = routes.filter((route) => pathnames.some((pathname) => route.exec(pathname)));\n\n\t\tconst promises = matching.map((r) => {\n\t\t\treturn Promise.all([...r.layouts, r.leaf].map((load) => load?.[1]()));\n\t\t});\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Returns `true` if update completes, `false` if it is aborted\n\t * @param {import('./types').NavigationIntent | undefined} intent\n\t * @param {URL} url\n\t * @param {string[]} redirect_chain\n\t * @param {{hash?: string, scroll: { x: number, y: number } | null, keepfocus: boolean, details: { replaceState: boolean, state: any } | null}} [opts]\n\t * @param {{}} [nav_token] To distinguish between different navigation events and determine the latest. Needed for example for redirects to keep the original token\n\t * @param {() => void} [callback]\n\t */\n\tasync function update(intent, url, redirect_chain, opts, nav_token = {}, callback) {\n\t\ttoken = nav_token;\n\t\tlet navigation_result = intent && (await load_route(intent));\n\n\t\tif (!navigation_result) {\n\t\t\tnavigation_result = await server_fallback(\n\t\t\t\turl,\n\t\t\t\t{ id: null },\n\t\t\t\tawait handle_error(new Error(`Not found: ${url.pathname}`), {\n\t\t\t\t\turl,\n\t\t\t\t\tparams: {},\n\t\t\t\t\troute: { id: null }\n\t\t\t\t}),\n\t\t\t\t404\n\t\t\t);\n\t\t}\n\n\t\t// if this is an internal navigation intent, use the normalized\n\t\t// URL for the rest of the function\n\t\turl = intent?.url || url;\n\n\t\t// abort if user navigated during update\n\t\tif (token !== nav_token) return false;\n\n\t\tif (navigation_result.type === 'redirect') {\n\t\t\tif (redirect_chain.length > 10 || redirect_chain.includes(url.pathname)) {\n\t\t\t\tnavigation_result = await load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: await handle_error(new Error('Redirect loop'), {\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams: {},\n\t\t\t\t\t\troute: { id: null }\n\t\t\t\t\t}),\n\t\t\t\t\turl,\n\t\t\t\t\troute: { id: null }\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgoto(\n\t\t\t\t\tnew URL(navigation_result.location, url).href,\n\t\t\t\t\t{},\n\t\t\t\t\t[...redirect_chain, url.pathname],\n\t\t\t\t\tnav_token\n\t\t\t\t);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (/** @type {number} */ (navigation_result.props?.page?.status) >= 400) {\n\t\t\tconst updated = await stores.updated.check();\n\t\t\tif (updated) {\n\t\t\t\tawait native_navigation(url);\n\t\t\t}\n\t\t}\n\n\t\t// reset invalidation only after a finished navigation. If there are redirects or\n\t\t// additional invalidations, they should get the same invalidation treatment\n\t\tinvalidated.length = 0;\n\t\tforce_invalidation = false;\n\n\t\tupdating = true;\n\n\t\tif (opts && opts.details) {\n\t\t\tconst { details } = opts;\n\t\t\tconst change = details.replaceState ? 0 : 1;\n\t\t\tdetails.state[INDEX_KEY] = current_history_index += change;\n\t\t\thistory[details.replaceState ? 'replaceState' : 'pushState'](details.state, '', url);\n\t\t}\n\n\t\t// reset preload synchronously after the history state has been set to avoid race conditions\n\t\tload_cache = null;\n\n\t\tif (started) {\n\t\t\tcurrent = navigation_result.state;\n\n\t\t\tif (navigation_result.props.page) {\n\t\t\t\tnavigation_result.props.page.url = url;\n\t\t\t}\n\n\t\t\troot.$set(navigation_result.props);\n\t\t} else {\n\t\t\tinitialize(navigation_result);\n\t\t}\n\n\t\t// opts must be passed if we're navigating\n\t\tif (opts) {\n\t\t\tconst { scroll, keepfocus } = opts;\n\n\t\t\t// reset focus first, so that manual focus management can override it\n\t\t\tif (!keepfocus) reset_focus();\n\n\t\t\t// need to render the DOM before we can scroll to the rendered elements\n\t\t\tawait tick();\n\n\t\t\tif (autoscroll) {\n\t\t\t\tconst deep_linked = url.hash && document.getElementById(url.hash.slice(1));\n\t\t\t\tif (scroll) {\n\t\t\t\t\tscrollTo(scroll.x, scroll.y);\n\t\t\t\t} else if (deep_linked) {\n\t\t\t\t\t// Here we use `scrollIntoView` on the element instead of `scrollTo`\n\t\t\t\t\t// because it natively supports the `scroll-margin` and `scroll-behavior`\n\t\t\t\t\t// CSS properties.\n\t\t\t\t\tdeep_linked.scrollIntoView();\n\t\t\t\t} else {\n\t\t\t\t\tscrollTo(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tawait tick();\n\t\t}\n\n\t\tautoscroll = true;\n\n\t\tif (navigation_result.props.page) {\n\t\t\tpage = navigation_result.props.page;\n\t\t}\n\n\t\tif (callback) callback();\n\n\t\tupdating = false;\n\t}\n\n\t/** @param {import('./types').NavigationFinished} result */\n\tfunction initialize(result) {\n\t\tif (DEV && document.querySelector('vite-error-overlay')) return;\n\n\t\tcurrent = result.state;\n\n\t\tconst style = document.querySelector('style[data-sveltekit]');\n\t\tif (style) style.remove();\n\n\t\tpage = /** @type {import('types').Page} */ (result.props.page);\n\n\t\troot = new Root({\n\t\t\ttarget,\n\t\t\tprops: { ...result.props, stores },\n\t\t\thydrate: true\n\t\t});\n\n\t\t/** @type {import('types').AfterNavigate} */\n\t\tconst navigation = {\n\t\t\tfrom: null,\n\t\t\tto: {\n\t\t\t\tparams: current.params,\n\t\t\t\troute: { id: current.route?.id ?? null },\n\t\t\t\turl: new URL(location.href)\n\t\t\t},\n\t\t\twillUnload: false,\n\t\t\ttype: 'enter'\n\t\t};\n\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\n\t\tstarted = true;\n\t}\n\n\t/**\n\t *\n\t * @param {{\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   branch: Array<import('./types').BranchNode | undefined>;\n\t *   status: number;\n\t *   error: App.Error | null;\n\t *   route: import('types').CSRRoute | null;\n\t *   form?: Record<string, any> | null;\n\t * }} opts\n\t */\n\tasync function get_navigation_result_from_branch({\n\t\turl,\n\t\tparams,\n\t\tbranch,\n\t\tstatus,\n\t\terror,\n\t\troute,\n\t\tform\n\t}) {\n\t\t/** @type {import('types').TrailingSlash} */\n\t\tlet slash = 'never';\n\t\tfor (const node of branch) {\n\t\t\tif (node?.slash !== undefined) slash = node.slash;\n\t\t}\n\t\turl.pathname = normalize_path(url.pathname, slash);\n\t\turl.search = url.search; // turn `/?` into `/`\n\n\t\t/** @type {import('./types').NavigationFinished} */\n\t\tconst result = {\n\t\t\ttype: 'loaded',\n\t\t\tstate: {\n\t\t\t\turl,\n\t\t\t\tparams,\n\t\t\t\tbranch,\n\t\t\t\terror,\n\t\t\t\troute\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\t// @ts-ignore Somehow it's getting SvelteComponent and SvelteComponentDev mixed up\n\t\t\t\tcomponents: compact(branch).map((branch_node) => branch_node.node.component)\n\t\t\t}\n\t\t};\n\n\t\tif (form !== undefined) {\n\t\t\tresult.props.form = form;\n\t\t}\n\n\t\tlet data = {};\n\t\tlet data_changed = !page;\n\n\t\tlet p = 0;\n\n\t\tfor (let i = 0; i < Math.max(branch.length, current.branch.length); i += 1) {\n\t\t\tconst node = branch[i];\n\t\t\tconst prev = current.branch[i];\n\n\t\t\tif (node?.data !== prev?.data) data_changed = true;\n\t\t\tif (!node) continue;\n\n\t\t\tdata = { ...data, ...node.data };\n\n\t\t\t// Only set props if the node actually updated. This prevents needless rerenders.\n\t\t\tif (data_changed) {\n\t\t\t\tresult.props[`data_${p}`] = data;\n\t\t\t}\n\n\t\t\tp += 1;\n\t\t}\n\n\t\tconst page_changed =\n\t\t\t!current.url ||\n\t\t\turl.href !== current.url.href ||\n\t\t\tcurrent.error !== error ||\n\t\t\t(form !== undefined && form !== page.form) ||\n\t\t\tdata_changed;\n\n\t\tif (page_changed) {\n\t\t\tresult.props.page = {\n\t\t\t\terror,\n\t\t\t\tparams,\n\t\t\t\troute: {\n\t\t\t\t\tid: route?.id ?? null\n\t\t\t\t},\n\t\t\t\tstatus,\n\t\t\t\turl: new URL(url),\n\t\t\t\tform: form ?? null,\n\t\t\t\t// The whole page store is updated, but this way the object reference stays the same\n\t\t\t\tdata: data_changed ? data : page.data\n\t\t\t};\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Call the load function of the given node, if it exists.\n\t * If `server_data` is passed, this is treated as the initial run and the page endpoint is not requested.\n\t *\n\t * @param {{\n\t *   loader: import('types').CSRPageNodeLoader;\n\t * \t parent: () => Promise<Record<string, any>>;\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   route: { id: string | null };\n\t * \t server_data_node: import('./types').DataNode | null;\n\t * }} options\n\t * @returns {Promise<import('./types').BranchNode>}\n\t */\n\tasync function load_node({ loader, parent, url, params, route, server_data_node }) {\n\t\t/** @type {Record<string, any> | null} */\n\t\tlet data = null;\n\n\t\t/** @type {import('types').Uses} */\n\t\tconst uses = {\n\t\t\tdependencies: new Set(),\n\t\t\tparams: new Set(),\n\t\t\tparent: false,\n\t\t\troute: false,\n\t\t\turl: false\n\t\t};\n\n\t\tconst node = await loader();\n\n\t\tif (DEV) {\n\t\t\tvalidate_common_exports(node.universal);\n\t\t}\n\n\t\tif (node.universal?.load) {\n\t\t\t/** @param {string[]} deps */\n\t\t\tfunction depends(...deps) {\n\t\t\t\tfor (const dep of deps) {\n\t\t\t\t\tconst { href } = new URL(dep, url);\n\t\t\t\t\tuses.dependencies.add(href);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** @type {import('types').LoadEvent} */\n\t\t\tconst load_input = {\n\t\t\t\troute: {\n\t\t\t\t\tget id() {\n\t\t\t\t\t\tuses.route = true;\n\t\t\t\t\t\treturn route.id;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparams: new Proxy(params, {\n\t\t\t\t\tget: (target, key) => {\n\t\t\t\t\t\tuses.params.add(/** @type {string} */ (key));\n\t\t\t\t\t\treturn target[/** @type {string} */ (key)];\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tdata: server_data_node?.data ?? null,\n\t\t\t\turl: make_trackable(url, () => {\n\t\t\t\t\tuses.url = true;\n\t\t\t\t}),\n\t\t\t\tasync fetch(resource, init) {\n\t\t\t\t\t/** @type {URL | string} */\n\t\t\t\t\tlet requested;\n\n\t\t\t\t\tif (resource instanceof Request) {\n\t\t\t\t\t\trequested = resource.url;\n\n\t\t\t\t\t\t// we're not allowed to modify the received `Request` object, so in order\n\t\t\t\t\t\t// to fixup relative urls we create a new equivalent `init` object instead\n\t\t\t\t\t\tinit = {\n\t\t\t\t\t\t\t// the request body must be consumed in memory until browsers\n\t\t\t\t\t\t\t// implement streaming request bodies and/or the body getter\n\t\t\t\t\t\t\tbody:\n\t\t\t\t\t\t\t\tresource.method === 'GET' || resource.method === 'HEAD'\n\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t: await resource.blob(),\n\t\t\t\t\t\t\tcache: resource.cache,\n\t\t\t\t\t\t\tcredentials: resource.credentials,\n\t\t\t\t\t\t\theaders: resource.headers,\n\t\t\t\t\t\t\tintegrity: resource.integrity,\n\t\t\t\t\t\t\tkeepalive: resource.keepalive,\n\t\t\t\t\t\t\tmethod: resource.method,\n\t\t\t\t\t\t\tmode: resource.mode,\n\t\t\t\t\t\t\tredirect: resource.redirect,\n\t\t\t\t\t\t\treferrer: resource.referrer,\n\t\t\t\t\t\t\treferrerPolicy: resource.referrerPolicy,\n\t\t\t\t\t\t\tsignal: resource.signal,\n\t\t\t\t\t\t\t...init\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\trequested = resource;\n\t\t\t\t\t}\n\n\t\t\t\t\t// we must fixup relative urls so they are resolved from the target page\n\t\t\t\t\tconst resolved = new URL(requested, url).href;\n\t\t\t\t\tdepends(resolved);\n\n\t\t\t\t\t// prerendered pages may be served from any origin, so `initial_fetch` urls shouldn't be resolved\n\t\t\t\t\treturn started\n\t\t\t\t\t\t? subsequent_fetch(requested, resolved, init)\n\t\t\t\t\t\t: initial_fetch(requested, init);\n\t\t\t\t},\n\t\t\t\tsetHeaders: () => {}, // noop\n\t\t\t\tdepends,\n\t\t\t\tparent() {\n\t\t\t\t\tuses.parent = true;\n\t\t\t\t\treturn parent();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (DEV) {\n\t\t\t\ttry {\n\t\t\t\t\tlock_fetch();\n\t\t\t\t\tdata = (await node.universal.load.call(null, load_input)) ?? null;\n\t\t\t\t\tif (data != null && Object.getPrototypeOf(data) !== Object.prototype) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`a load function related to route '${route.id}' returned ${\n\t\t\t\t\t\t\t\ttypeof data !== 'object'\n\t\t\t\t\t\t\t\t\t? `a ${typeof data}`\n\t\t\t\t\t\t\t\t\t: data instanceof Response\n\t\t\t\t\t\t\t\t\t? 'a Response object'\n\t\t\t\t\t\t\t\t\t: Array.isArray(data)\n\t\t\t\t\t\t\t\t\t? 'an array'\n\t\t\t\t\t\t\t\t\t: 'a non-plain object'\n\t\t\t\t\t\t\t}, but must return a plain object at the top level (i.e. \\`return {...}\\`)`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tunlock_fetch();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdata = (await node.universal.load.call(null, load_input)) ?? null;\n\t\t\t}\n\t\t\tdata = data ? await unwrap_promises(data) : null;\n\t\t}\n\n\t\treturn {\n\t\t\tnode,\n\t\t\tloader,\n\t\t\tserver: server_data_node,\n\t\t\tuniversal: node.universal?.load ? { type: 'data', data, uses } : null,\n\t\t\tdata: data ?? server_data_node?.data ?? null,\n\t\t\tslash: node.universal?.trailingSlash ?? server_data_node?.slash\n\t\t};\n\t}\n\n\t/**\n\t * @param {boolean} parent_changed\n\t * @param {boolean} route_changed\n\t * @param {boolean} url_changed\n\t * @param {import('types').Uses | undefined} uses\n\t * @param {Record<string, string>} params\n\t */\n\tfunction has_changed(parent_changed, route_changed, url_changed, uses, params) {\n\t\tif (force_invalidation) return true;\n\n\t\tif (!uses) return false;\n\n\t\tif (uses.parent && parent_changed) return true;\n\t\tif (uses.route && route_changed) return true;\n\t\tif (uses.url && url_changed) return true;\n\n\t\tfor (const param of uses.params) {\n\t\t\tif (params[param] !== current.params[param]) return true;\n\t\t}\n\n\t\tfor (const href of uses.dependencies) {\n\t\t\tif (invalidated.some((fn) => fn(new URL(href)))) return true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {import('types').ServerDataNode | import('types').ServerDataSkippedNode | null} node\n\t * @param {import('./types').DataNode | null} [previous]\n\t * @returns {import('./types').DataNode | null}\n\t */\n\tfunction create_data_node(node, previous) {\n\t\tif (node?.type === 'data') {\n\t\t\treturn {\n\t\t\t\ttype: 'data',\n\t\t\t\tdata: node.data,\n\t\t\t\tuses: {\n\t\t\t\t\tdependencies: new Set(node.uses.dependencies ?? []),\n\t\t\t\t\tparams: new Set(node.uses.params ?? []),\n\t\t\t\t\tparent: !!node.uses.parent,\n\t\t\t\t\troute: !!node.uses.route,\n\t\t\t\t\turl: !!node.uses.url\n\t\t\t\t},\n\t\t\t\tslash: node.slash\n\t\t\t};\n\t\t} else if (node?.type === 'skip') {\n\t\t\treturn previous ?? null;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationIntent} intent\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tasync function load_route({ id, invalidating, url, params, route }) {\n\t\tif (load_cache?.id === id) {\n\t\t\treturn load_cache.promise;\n\t\t}\n\n\t\tconst { errors, layouts, leaf } = route;\n\n\t\tconst loaders = [...layouts, leaf];\n\n\t\t// preload modules to avoid waterfall, but handle rejections\n\t\t// so they don't get reported to Sentry et al (we don't need\n\t\t// to act on the failures at this point)\n\t\terrors.forEach((loader) => loader?.().catch(() => {}));\n\t\tloaders.forEach((loader) => loader?.[1]().catch(() => {}));\n\n\t\t/** @type {import('types').ServerData | null} */\n\t\tlet server_data = null;\n\n\t\tconst url_changed = current.url ? id !== current.url.pathname + current.url.search : false;\n\t\tconst route_changed = current.route ? route.id !== current.route.id : false;\n\n\t\tconst invalid_server_nodes = loaders.reduce((acc, loader, i) => {\n\t\t\tconst previous = current.branch[i];\n\n\t\t\tconst invalid =\n\t\t\t\t!!loader?.[0] &&\n\t\t\t\t(previous?.loader !== loader[1] ||\n\t\t\t\t\thas_changed(\n\t\t\t\t\t\tacc.some(Boolean),\n\t\t\t\t\t\troute_changed,\n\t\t\t\t\t\turl_changed,\n\t\t\t\t\t\tprevious.server?.uses,\n\t\t\t\t\t\tparams\n\t\t\t\t\t));\n\n\t\t\tacc.push(invalid);\n\t\t\treturn acc;\n\t\t}, /** @type {boolean[]} */ ([]));\n\n\t\tif (invalid_server_nodes.some(Boolean)) {\n\t\t\ttry {\n\t\t\t\tserver_data = await load_data(url, invalid_server_nodes);\n\t\t\t} catch (error) {\n\t\t\t\treturn load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: await handle_error(error, { url, params, route: { id: route.id } }),\n\t\t\t\t\turl,\n\t\t\t\t\troute\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (server_data.type === 'redirect') {\n\t\t\t\treturn server_data;\n\t\t\t}\n\t\t}\n\n\t\tconst server_data_nodes = server_data?.nodes;\n\n\t\tlet parent_changed = false;\n\n\t\tconst branch_promises = loaders.map(async (loader, i) => {\n\t\t\tif (!loader) return;\n\n\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\tconst previous = current.branch[i];\n\n\t\t\tconst server_data_node = server_data_nodes?.[i];\n\n\t\t\t// re-use data from previous load if it's still valid\n\t\t\tconst valid =\n\t\t\t\t(!server_data_node || server_data_node.type === 'skip') &&\n\t\t\t\tloader[1] === previous?.loader &&\n\t\t\t\t!has_changed(parent_changed, route_changed, url_changed, previous.universal?.uses, params);\n\t\t\tif (valid) return previous;\n\n\t\t\tparent_changed = true;\n\n\t\t\tif (server_data_node?.type === 'error') {\n\t\t\t\t// rethrow and catch below\n\t\t\t\tthrow server_data_node;\n\t\t\t}\n\n\t\t\treturn load_node({\n\t\t\t\tloader: loader[1],\n\t\t\t\turl,\n\t\t\t\tparams,\n\t\t\t\troute,\n\t\t\t\tparent: async () => {\n\t\t\t\t\tconst data = {};\n\t\t\t\t\tfor (let j = 0; j < i; j += 1) {\n\t\t\t\t\t\tObject.assign(data, (await branch_promises[j])?.data);\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\t},\n\t\t\t\tserver_data_node: create_data_node(\n\t\t\t\t\t// server_data_node is undefined if it wasn't reloaded from the server;\n\t\t\t\t\t// and if current loader uses server data, we want to reuse previous data.\n\t\t\t\t\tserver_data_node === undefined && loader[0] ? { type: 'skip' } : server_data_node ?? null,\n\t\t\t\t\tprevious?.server\n\t\t\t\t)\n\t\t\t});\n\t\t});\n\n\t\t// if we don't do this, rejections will be unhandled\n\t\tfor (const p of branch_promises) p.catch(() => {});\n\n\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\tconst branch = [];\n\n\t\tfor (let i = 0; i < loaders.length; i += 1) {\n\t\t\tif (loaders[i]) {\n\t\t\t\ttry {\n\t\t\t\t\tbranch.push(await branch_promises[i]);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (err instanceof Redirect) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: 'redirect',\n\t\t\t\t\t\t\tlocation: err.location\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tlet status = 500;\n\t\t\t\t\t/** @type {App.Error} */\n\t\t\t\t\tlet error;\n\n\t\t\t\t\tif (server_data_nodes?.includes(/** @type {import('types').ServerErrorNode} */ (err))) {\n\t\t\t\t\t\t// this is the server error rethrown above, reconstruct but don't invoke\n\t\t\t\t\t\t// the client error handler; it should've already been handled on the server\n\t\t\t\t\t\tstatus = /** @type {import('types').ServerErrorNode} */ (err).status ?? status;\n\t\t\t\t\t\terror = /** @type {import('types').ServerErrorNode} */ (err).error;\n\t\t\t\t\t} else if (err instanceof HttpError) {\n\t\t\t\t\t\tstatus = err.status;\n\t\t\t\t\t\terror = err.body;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Referenced node could have been removed due to redeploy, check\n\t\t\t\t\t\tconst updated = await stores.updated.check();\n\t\t\t\t\t\tif (updated) {\n\t\t\t\t\t\t\treturn await native_navigation(url);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\terror = await handle_error(err, { params, url, route: { id: route.id } });\n\t\t\t\t\t}\n\n\t\t\t\t\tconst error_load = await load_nearest_error_page(i, branch, errors);\n\t\t\t\t\tif (error_load) {\n\t\t\t\t\t\treturn await get_navigation_result_from_branch({\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tbranch: branch.slice(0, error_load.idx).concat(error_load.node),\n\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\troute\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if we get here, it's because the root `load` function failed,\n\t\t\t\t\t\t// and we need to fall back to the server\n\t\t\t\t\t\treturn await server_fallback(url, { id: route.id }, error, status);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// push an empty slot so we can rewind past gaps to the\n\t\t\t\t// layout that corresponds with an +error.svelte page\n\t\t\t\tbranch.push(undefined);\n\t\t\t}\n\t\t}\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tbranch,\n\t\t\tstatus: 200,\n\t\t\terror: null,\n\t\t\troute,\n\t\t\t// Reset `form` on navigation, but not invalidation\n\t\t\tform: invalidating ? undefined : null\n\t\t});\n\t}\n\n\t/**\n\t * @param {number} i Start index to backtrack from\n\t * @param {Array<import('./types').BranchNode | undefined>} branch Branch to backtrack\n\t * @param {Array<import('types').CSRPageNodeLoader | undefined>} errors All error pages for this branch\n\t * @returns {Promise<{idx: number; node: import('./types').BranchNode} | undefined>}\n\t */\n\tasync function load_nearest_error_page(i, branch, errors) {\n\t\twhile (i--) {\n\t\t\tif (errors[i]) {\n\t\t\t\tlet j = i;\n\t\t\t\twhile (!branch[j]) j -= 1;\n\t\t\t\ttry {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tidx: j + 1,\n\t\t\t\t\t\tnode: {\n\t\t\t\t\t\t\tnode: await /** @type {import('types').CSRPageNodeLoader } */ (errors[i])(),\n\t\t\t\t\t\t\tloader: /** @type {import('types').CSRPageNodeLoader } */ (errors[i]),\n\t\t\t\t\t\t\tdata: {},\n\t\t\t\t\t\t\tserver: null,\n\t\t\t\t\t\t\tuniversal: null\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: App.Error;\n\t *   url: URL;\n\t *   route: { id: string | null }\n\t * }} opts\n\t * @returns {Promise<import('./types').NavigationFinished>}\n\t */\n\tasync function load_root_error_page({ status, error, url, route }) {\n\t\t/** @type {Record<string, string>} */\n\t\tconst params = {}; // error page does not have params\n\n\t\tconst node = await default_layout_loader();\n\n\t\t/** @type {import('types').ServerDataNode | null} */\n\t\tlet server_data_node = null;\n\n\t\tif (node.has_server_load) {\n\t\t\t// TODO post-https://github.com/sveltejs/kit/discussions/6124 we can use\n\t\t\t// existing root layout data\n\t\t\ttry {\n\t\t\t\tconst server_data = await load_data(url, [true]);\n\n\t\t\t\tif (\n\t\t\t\t\tserver_data.type !== 'data' ||\n\t\t\t\t\t(server_data.nodes[0] && server_data.nodes[0].type !== 'data')\n\t\t\t\t) {\n\t\t\t\t\tthrow 0;\n\t\t\t\t}\n\n\t\t\t\tserver_data_node = server_data.nodes[0] ?? null;\n\t\t\t} catch {\n\t\t\t\t// at this point we have no choice but to fall back to the server, if it wouldn't\n\t\t\t\t// bring us right back here, turning this into an endless loop\n\t\t\t\tif (url.origin !== location.origin || url.pathname !== location.pathname || hydrated) {\n\t\t\t\t\tawait native_navigation(url);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst root_layout = await load_node({\n\t\t\tloader: default_layout_loader,\n\t\t\turl,\n\t\t\tparams,\n\t\t\troute,\n\t\t\tparent: () => Promise.resolve({}),\n\t\t\tserver_data_node: create_data_node(server_data_node)\n\t\t});\n\n\t\t/** @type {import('./types').BranchNode} */\n\t\tconst root_error = {\n\t\t\tnode: await default_error_loader(),\n\t\t\tloader: default_error_loader,\n\t\t\tuniversal: null,\n\t\t\tserver: null,\n\t\t\tdata: null\n\t\t};\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tbranch: [root_layout, root_error],\n\t\t\tstatus,\n\t\t\terror,\n\t\t\troute: null\n\t\t});\n\t}\n\n\t/**\n\t * @param {URL} url\n\t * @param {boolean} invalidating\n\t */\n\tfunction get_navigation_intent(url, invalidating) {\n\t\tif (is_external_url(url, base)) return;\n\n\t\tconst path = decode_pathname(url.pathname.slice(base.length) || '/');\n\n\t\tfor (const route of routes) {\n\t\t\tconst params = route.exec(path);\n\n\t\t\tif (params) {\n\t\t\t\tconst id = url.pathname + url.search;\n\t\t\t\t/** @type {import('./types').NavigationIntent} */\n\t\t\t\tconst intent = { id, invalidating, route, params: decode_params(params), url };\n\t\t\t\treturn intent;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {{\n\t *   url: URL;\n\t *   type: import('types').NavigationType;\n\t *   intent?: import('./types').NavigationIntent;\n\t *   delta?: number;\n\t * }} opts\n\t */\n\tfunction before_navigate({ url, type, intent, delta }) {\n\t\tlet should_block = false;\n\n\t\t/** @type {import('types').Navigation} */\n\t\tconst navigation = {\n\t\t\tfrom: {\n\t\t\t\tparams: current.params,\n\t\t\t\troute: { id: current.route?.id ?? null },\n\t\t\t\turl: current.url\n\t\t\t},\n\t\t\tto: {\n\t\t\t\tparams: intent?.params ?? null,\n\t\t\t\troute: { id: intent?.route?.id ?? null },\n\t\t\t\turl\n\t\t\t},\n\t\t\twillUnload: !intent,\n\t\t\ttype\n\t\t};\n\n\t\tif (delta !== undefined) {\n\t\t\tnavigation.delta = delta;\n\t\t}\n\n\t\tconst cancellable = {\n\t\t\t...navigation,\n\t\t\tcancel: () => {\n\t\t\t\tshould_block = true;\n\t\t\t}\n\t\t};\n\n\t\tif (!navigating) {\n\t\t\t// Don't run the event during redirects\n\t\t\tcallbacks.before_navigate.forEach((fn) => fn(cancellable));\n\t\t}\n\n\t\treturn should_block ? null : navigation;\n\t}\n\n\t/**\n\t * @param {{\n\t *   url: URL;\n\t *   scroll: { x: number, y: number } | null;\n\t *   keepfocus: boolean;\n\t *   redirect_chain: string[];\n\t *   details: {\n\t *     replaceState: boolean;\n\t *     state: any;\n\t *   } | null;\n\t *   type: import('types').NavigationType;\n\t *   delta?: number;\n\t *   nav_token?: {};\n\t *   accepted: () => void;\n\t *   blocked: () => void;\n\t * }} opts\n\t */\n\tasync function navigate({\n\t\turl,\n\t\tscroll,\n\t\tkeepfocus,\n\t\tredirect_chain,\n\t\tdetails,\n\t\ttype,\n\t\tdelta,\n\t\tnav_token,\n\t\taccepted,\n\t\tblocked\n\t}) {\n\t\tconst intent = get_navigation_intent(url, false);\n\t\tconst navigation = before_navigate({ url, type, delta, intent });\n\n\t\tif (!navigation) {\n\t\t\tblocked();\n\t\t\treturn;\n\t\t}\n\n\t\tupdate_scroll_positions(current_history_index);\n\n\t\taccepted();\n\n\t\tnavigating = true;\n\n\t\tif (started) {\n\t\t\tstores.navigating.set(navigation);\n\t\t}\n\n\t\tawait update(\n\t\t\tintent,\n\t\t\turl,\n\t\t\tredirect_chain,\n\t\t\t{\n\t\t\t\tscroll,\n\t\t\t\tkeepfocus,\n\t\t\t\tdetails\n\t\t\t},\n\t\t\tnav_token,\n\t\t\t() => {\n\t\t\t\tnavigating = false;\n\t\t\t\tcallbacks.after_navigate.forEach((fn) =>\n\t\t\t\t\tfn(/** @type {import('types').AfterNavigate} */ (navigation))\n\t\t\t\t);\n\t\t\t\tstores.navigating.set(null);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Does a full page reload if it wouldn't result in an endless loop in the SPA case\n\t * @param {URL} url\n\t * @param {{ id: string | null }} route\n\t * @param {App.Error} error\n\t * @param {number} status\n\t * @returns {Promise<import('./types').NavigationFinished>}\n\t */\n\tasync function server_fallback(url, route, error, status) {\n\t\tif (url.origin === location.origin && url.pathname === location.pathname && !hydrated) {\n\t\t\t// We would reload the same page we're currently on, which isn't hydrated,\n\t\t\t// which means no SSR, which means we would end up in an endless loop\n\t\t\treturn await load_root_error_page({\n\t\t\t\tstatus,\n\t\t\t\terror,\n\t\t\t\turl,\n\t\t\t\troute\n\t\t\t});\n\t\t}\n\t\treturn await native_navigation(url);\n\t}\n\n\t/**\n\t * Loads `href` the old-fashioned way, with a full page reload.\n\t * Returns a `Promise` that never resolves (to prevent any\n\t * subsequent work, e.g. history manipulation, from happening)\n\t * @param {URL} url\n\t */\n\tfunction native_navigation(url) {\n\t\tlocation.href = url.href;\n\t\treturn new Promise(() => {});\n\t}\n\n\tif (import.meta.hot) {\n\t\timport.meta.hot.on('vite:beforeUpdate', () => {\n\t\t\tif (current.error) location.reload();\n\t\t});\n\t}\n\n\tfunction setup_preload() {\n\t\t/** @type {NodeJS.Timeout} */\n\t\tlet mousemove_timeout;\n\n\t\tcontainer.addEventListener('mousemove', (event) => {\n\t\t\tconst target = /** @type {Element} */ (event.target);\n\n\t\t\tclearTimeout(mousemove_timeout);\n\t\t\tmousemove_timeout = setTimeout(() => {\n\t\t\t\tpreload(target, 2);\n\t\t\t}, 20);\n\t\t});\n\n\t\t/** @param {Event} event */\n\t\tfunction tap(event) {\n\t\t\tpreload(/** @type {Element} */ (event.composedPath()[0]), 1);\n\t\t}\n\n\t\tcontainer.addEventListener('mousedown', tap);\n\t\tcontainer.addEventListener('touchstart', tap, { passive: true });\n\n\t\tconst observer = new IntersectionObserver(\n\t\t\t(entries) => {\n\t\t\t\tfor (const entry of entries) {\n\t\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\t\tpreload_code(new URL(/** @type {HTMLAnchorElement} */ (entry.target).href).pathname);\n\t\t\t\t\t\tobserver.unobserve(entry.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t{ threshold: 0 }\n\t\t);\n\n\t\t/**\n\t\t * @param {Element} element\n\t\t * @param {number} priority\n\t\t */\n\t\tfunction preload(element, priority) {\n\t\t\tconst a = find_anchor(element, container);\n\t\t\tif (!a) return;\n\n\t\t\tconst { url, external } = get_link_info(a, base);\n\t\t\tif (external) return;\n\n\t\t\tconst options = get_router_options(a);\n\n\t\t\tif (!options.reload) {\n\t\t\t\tif (priority <= options.preload_data) {\n\t\t\t\t\tpreload_data(/** @type {URL} */ (url));\n\t\t\t\t} else if (priority <= options.preload_code) {\n\t\t\t\t\tpreload_code(/** @type {URL} */ (url).pathname);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction after_navigate() {\n\t\t\tobserver.disconnect();\n\n\t\t\tfor (const a of container.querySelectorAll('a')) {\n\t\t\t\tconst { url, external } = get_link_info(a, base);\n\t\t\t\tif (external) continue;\n\n\t\t\t\tconst options = get_router_options(a);\n\t\t\t\tif (options.reload) continue;\n\n\t\t\t\tif (options.preload_code === PRELOAD_PRIORITIES.viewport) {\n\t\t\t\t\tobserver.observe(a);\n\t\t\t\t}\n\n\t\t\t\tif (options.preload_code === PRELOAD_PRIORITIES.eager) {\n\t\t\t\t\tpreload_code(/** @type {URL} */ (url).pathname);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcallbacks.after_navigate.push(after_navigate);\n\t\tafter_navigate();\n\t}\n\n\treturn {\n\t\tafter_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.after_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.after_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.after_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tbefore_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.before_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.before_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.before_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tdisable_scroll_handling: () => {\n\t\t\tif (DEV && started && !updating) {\n\t\t\t\tthrow new Error('Can only disable scroll handling during navigation');\n\t\t\t}\n\n\t\t\tif (updating || !started) {\n\t\t\t\tautoscroll = false;\n\t\t\t}\n\t\t},\n\n\t\tgoto: (href, opts = {}) => {\n\t\t\treturn goto(href, opts, []);\n\t\t},\n\n\t\tinvalidate: (resource) => {\n\t\t\tif (typeof resource === 'function') {\n\t\t\t\tinvalidated.push(resource);\n\t\t\t} else {\n\t\t\t\tconst { href } = new URL(resource, location.href);\n\t\t\t\tinvalidated.push((url) => url.href === href);\n\t\t\t}\n\n\t\t\treturn invalidate();\n\t\t},\n\n\t\tinvalidateAll: () => {\n\t\t\tforce_invalidation = true;\n\t\t\treturn invalidate();\n\t\t},\n\n\t\tpreload_data: async (href) => {\n\t\t\tconst url = new URL(href, get_base_uri(document));\n\t\t\tawait preload_data(url);\n\t\t},\n\n\t\tpreload_code,\n\n\t\tapply_action: async (result) => {\n\t\t\tif (result.type === 'error') {\n\t\t\t\tconst url = new URL(location.href);\n\n\t\t\t\tconst { branch, route } = current;\n\t\t\t\tif (!route) return;\n\n\t\t\t\tconst error_load = await load_nearest_error_page(\n\t\t\t\t\tcurrent.branch.length,\n\t\t\t\t\tbranch,\n\t\t\t\t\troute.errors\n\t\t\t\t);\n\t\t\t\tif (error_load) {\n\t\t\t\t\tconst navigation_result = await get_navigation_result_from_branch({\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams: current.params,\n\t\t\t\t\t\tbranch: branch.slice(0, error_load.idx).concat(error_load.node),\n\t\t\t\t\t\tstatus: result.status ?? 500,\n\t\t\t\t\t\terror: result.error,\n\t\t\t\t\t\troute\n\t\t\t\t\t});\n\n\t\t\t\t\tcurrent = navigation_result.state;\n\n\t\t\t\t\troot.$set(navigation_result.props);\n\n\t\t\t\t\ttick().then(reset_focus);\n\t\t\t\t}\n\t\t\t} else if (result.type === 'redirect') {\n\t\t\t\tgoto(result.location, { invalidateAll: true }, []);\n\t\t\t} else {\n\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\tconst props = {\n\t\t\t\t\tform: result.data,\n\t\t\t\t\tpage: { ...page, form: result.data, status: result.status }\n\t\t\t\t};\n\t\t\t\troot.$set(props);\n\n\t\t\t\tif (result.type === 'success') {\n\t\t\t\t\ttick().then(reset_focus);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_start_router: () => {\n\t\t\thistory.scrollRestoration = 'manual';\n\n\t\t\t// Adopted from Nuxt.js\n\t\t\t// Reset scrollRestoration to auto when leaving page, allowing page reload\n\t\t\t// and back-navigation from other pages to use the browser to restore the\n\t\t\t// scrolling position.\n\t\t\taddEventListener('beforeunload', (e) => {\n\t\t\t\tlet should_block = false;\n\n\t\t\t\tif (!navigating) {\n\t\t\t\t\t// If we're navigating, beforeNavigate was already called. If we end up in here during navigation,\n\t\t\t\t\t// it's due to an external or full-page-reload link, for which we don't want to call the hook again.\n\t\t\t\t\t/** @type {import('types').BeforeNavigate} */\n\t\t\t\t\tconst navigation = {\n\t\t\t\t\t\tfrom: {\n\t\t\t\t\t\t\tparams: current.params,\n\t\t\t\t\t\t\troute: { id: current.route?.id ?? null },\n\t\t\t\t\t\t\turl: current.url\n\t\t\t\t\t\t},\n\t\t\t\t\t\tto: null,\n\t\t\t\t\t\twillUnload: true,\n\t\t\t\t\t\ttype: 'leave',\n\t\t\t\t\t\tcancel: () => (should_block = true)\n\t\t\t\t\t};\n\n\t\t\t\t\tcallbacks.before_navigate.forEach((fn) => fn(navigation));\n\t\t\t\t}\n\n\t\t\t\tif (should_block) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.returnValue = '';\n\t\t\t\t} else {\n\t\t\t\t\thistory.scrollRestoration = 'auto';\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('visibilitychange', () => {\n\t\t\t\tif (document.visibilityState === 'hidden') {\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsessionStorage[SCROLL_KEY] = JSON.stringify(scroll_positions);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// @ts-expect-error this isn't supported everywhere yet\n\t\t\tif (!navigator.connection?.saveData) {\n\t\t\t\tsetup_preload();\n\t\t\t}\n\n\t\t\t/** @param {MouseEvent} event */\n\t\t\tcontainer.addEventListener('click', (event) => {\n\t\t\t\t// Adapted from https://github.com/visionmedia/page.js\n\t\t\t\t// MIT license https://github.com/visionmedia/page.js#license\n\t\t\t\tif (event.button || event.which !== 1) return;\n\t\t\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) return;\n\t\t\t\tif (event.defaultPrevented) return;\n\n\t\t\t\tconst a = find_anchor(/** @type {Element} */ (event.composedPath()[0]), container);\n\t\t\t\tif (!a) return;\n\n\t\t\t\tconst { url, external, target } = get_link_info(a, base);\n\t\t\t\tif (!url) return;\n\n\t\t\t\t// bail out before `beforeNavigate` if link opens in a different tab\n\t\t\t\tif (target === '_parent' || target === '_top') {\n\t\t\t\t\tif (window.parent !== window) return;\n\t\t\t\t} else if (target && target !== '_self') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst options = get_router_options(a);\n\t\t\t\tconst is_svg_a_element = a instanceof SVGAElement;\n\n\t\t\t\t// Ignore URL protocols that differ to the current one and are not http(s) (e.g. `mailto:`, `tel:`, `myapp:`, etc.)\n\t\t\t\t// This may be wrong when the protocol is x: and the link goes to y:.. which should be treated as an external\n\t\t\t\t// navigation, but it's not clear how to handle that case and it's not likely to come up in practice.\n\t\t\t\t// MEMO: Without this condition, firefox will open mailer twice.\n\t\t\t\t// See:\n\t\t\t\t// - https://github.com/sveltejs/kit/issues/4045\n\t\t\t\t// - https://github.com/sveltejs/kit/issues/5725\n\t\t\t\t// - https://github.com/sveltejs/kit/issues/6496\n\t\t\t\tif (\n\t\t\t\t\t!is_svg_a_element &&\n\t\t\t\t\turl.protocol !== location.protocol &&\n\t\t\t\t\t!(url.protocol === 'https:' || url.protocol === 'http:')\n\t\t\t\t)\n\t\t\t\t\treturn;\n\n\t\t\t\t// Ignore the following but fire beforeNavigate\n\t\t\t\tif (external || options.reload) {\n\t\t\t\t\tconst navigation = before_navigate({ url, type: 'link' });\n\t\t\t\t\tif (!navigation) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\tnavigating = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check if new url only differs by hash and use the browser default behavior in that case\n\t\t\t\t// This will ensure the `hashchange` event is fired\n\t\t\t\t// Removing the hash does a full page navigation in the browser, so make sure a hash is present\n\t\t\t\tconst [nonhash, hash] = url.href.split('#');\n\t\t\t\tif (hash !== undefined && nonhash === location.href.split('#')[0]) {\n\t\t\t\t\t// set this flag to distinguish between navigations triggered by\n\t\t\t\t\t// clicking a hash link and those triggered by popstate\n\t\t\t\t\t// TODO why not update history here directly?\n\t\t\t\t\thash_navigating = true;\n\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\tcurrent.url = url;\n\t\t\t\t\tstores.page.set({ ...page, url });\n\t\t\t\t\tstores.page.notify();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnavigate({\n\t\t\t\t\turl,\n\t\t\t\t\tscroll: options.noscroll ? scroll_state() : null,\n\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tstate: {},\n\t\t\t\t\t\treplaceState: url.href === location.href\n\t\t\t\t\t},\n\t\t\t\t\taccepted: () => event.preventDefault(),\n\t\t\t\t\tblocked: () => event.preventDefault(),\n\t\t\t\t\ttype: 'link'\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tcontainer.addEventListener('submit', (event) => {\n\t\t\t\tif (event.defaultPrevented) return;\n\n\t\t\t\tconst form = /** @type {HTMLFormElement} */ (\n\t\t\t\t\tHTMLFormElement.prototype.cloneNode.call(event.target)\n\t\t\t\t);\n\n\t\t\t\tconst submitter = /** @type {HTMLButtonElement | HTMLInputElement | null} */ (\n\t\t\t\t\tevent.submitter\n\t\t\t\t);\n\n\t\t\t\tconst method = submitter?.formMethod || form.method;\n\n\t\t\t\tif (method !== 'get') return;\n\n\t\t\t\tconst url = new URL(\n\t\t\t\t\t(submitter?.hasAttribute('formaction') && submitter?.formAction) || form.action\n\t\t\t\t);\n\n\t\t\t\tif (is_external_url(url, base)) return;\n\n\t\t\t\tconst event_form = /** @type {HTMLFormElement} */ (event.target);\n\n\t\t\t\tconst { noscroll, reload } = get_router_options(event_form);\n\t\t\t\tif (reload) return;\n\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\n\t\t\t\tconst data = new FormData(event_form);\n\n\t\t\t\tconst submitter_name = submitter?.getAttribute('name');\n\t\t\t\tif (submitter_name) {\n\t\t\t\t\tdata.append(submitter_name, submitter?.getAttribute('value') ?? '');\n\t\t\t\t}\n\n\t\t\t\t// @ts-expect-error `URLSearchParams(fd)` is kosher, but typescript doesn't know that\n\t\t\t\turl.search = new URLSearchParams(data).toString();\n\n\t\t\t\tnavigate({\n\t\t\t\t\turl,\n\t\t\t\t\tscroll: noscroll ? scroll_state() : null,\n\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tstate: {},\n\t\t\t\t\t\treplaceState: false\n\t\t\t\t\t},\n\t\t\t\t\tnav_token: {},\n\t\t\t\t\taccepted: () => {},\n\t\t\t\t\tblocked: () => {},\n\t\t\t\t\ttype: 'form'\n\t\t\t\t});\n\t\t\t});\n\n\t\t\taddEventListener('popstate', (event) => {\n\t\t\t\tif (event.state?.[INDEX_KEY]) {\n\t\t\t\t\t// if a popstate-driven navigation is cancelled, we need to counteract it\n\t\t\t\t\t// with history.go, which means we end up back here, hence this check\n\t\t\t\t\tif (event.state[INDEX_KEY] === current_history_index) return;\n\n\t\t\t\t\tconst delta = event.state[INDEX_KEY] - current_history_index;\n\n\t\t\t\t\tnavigate({\n\t\t\t\t\t\turl: new URL(location.href),\n\t\t\t\t\t\tscroll: scroll_positions[event.state[INDEX_KEY]],\n\t\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\t\tdetails: null,\n\t\t\t\t\t\taccepted: () => {\n\t\t\t\t\t\t\tcurrent_history_index = event.state[INDEX_KEY];\n\t\t\t\t\t\t},\n\t\t\t\t\t\tblocked: () => {\n\t\t\t\t\t\t\thistory.go(-delta);\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 'popstate',\n\t\t\t\t\t\tdelta\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('hashchange', () => {\n\t\t\t\t// if the hashchange happened as a result of clicking on a link,\n\t\t\t\t// we need to update history, otherwise we have to leave it alone\n\t\t\t\tif (hash_navigating) {\n\t\t\t\t\thash_navigating = false;\n\t\t\t\t\thistory.replaceState(\n\t\t\t\t\t\t{ ...history.state, [INDEX_KEY]: ++current_history_index },\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tlocation.href\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// fix link[rel=icon], because browsers will occasionally try to load relative\n\t\t\t// URLs after a pushState/replaceState, resulting in a 404 — see\n\t\t\t// https://github.com/sveltejs/kit/issues/3748#issuecomment-1125980897\n\t\t\tfor (const link of document.querySelectorAll('link')) {\n\t\t\t\tif (link.rel === 'icon') link.href = link.href;\n\t\t\t}\n\n\t\t\taddEventListener('pageshow', (event) => {\n\t\t\t\t// If the user navigates to another site and then uses the back button and\n\t\t\t\t// bfcache hits, we need to set navigating to null, the site doesn't know\n\t\t\t\t// the navigation away from it was successful.\n\t\t\t\t// Info about bfcache here: https://web.dev/bfcache\n\t\t\t\tif (event.persisted) {\n\t\t\t\t\tstores.navigating.set(null);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_hydrate: async ({\n\t\t\tstatus = 200,\n\t\t\terror,\n\t\t\tnode_ids,\n\t\t\tparams,\n\t\t\troute,\n\t\t\tdata: server_data_nodes,\n\t\t\tform\n\t\t}) => {\n\t\t\thydrated = true;\n\n\t\t\tconst url = new URL(location.href);\n\n\t\t\tif (!__SVELTEKIT_EMBEDDED__) {\n\t\t\t\t// See https://github.com/sveltejs/kit/pull/4935#issuecomment-1328093358 for one motivation\n\t\t\t\t// of determining the params on the client side.\n\t\t\t\t({ params = {}, route = { id: null } } = get_navigation_intent(url, false) || {});\n\t\t\t}\n\n\t\t\t/** @type {import('./types').NavigationFinished | undefined} */\n\t\t\tlet result;\n\n\t\t\ttry {\n\t\t\t\tconst branch_promises = node_ids.map(async (n, i) => {\n\t\t\t\t\tconst server_data_node = server_data_nodes[i];\n\n\t\t\t\t\treturn load_node({\n\t\t\t\t\t\tloader: nodes[n],\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\troute,\n\t\t\t\t\t\tparent: async () => {\n\t\t\t\t\t\t\tconst data = {};\n\t\t\t\t\t\t\tfor (let j = 0; j < i; j += 1) {\n\t\t\t\t\t\t\t\tObject.assign(data, (await branch_promises[j]).data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tserver_data_node: create_data_node(server_data_node)\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tresult = await get_navigation_result_from_branch({\n\t\t\t\t\turl,\n\t\t\t\t\tparams,\n\t\t\t\t\tbranch: await Promise.all(branch_promises),\n\t\t\t\t\tstatus,\n\t\t\t\t\terror,\n\t\t\t\t\tform,\n\t\t\t\t\troute: routes.find(({ id }) => id === route.id) ?? null\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tif (error instanceof Redirect) {\n\t\t\t\t\t// this is a real edge case — `load` would need to return\n\t\t\t\t\t// a redirect but only in the browser\n\t\t\t\t\tawait native_navigation(new URL(error.location, location.href));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult = await load_root_error_page({\n\t\t\t\t\tstatus: error instanceof HttpError ? error.status : 500,\n\t\t\t\t\terror: await handle_error(error, { url, params, route }),\n\t\t\t\t\turl,\n\t\t\t\t\troute\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tinitialize(result);\n\t\t}\n\t};\n}\n\n/**\n * @param {URL} url\n * @param {boolean[]} invalid\n * @returns {Promise<import('types').ServerData>}\n */\nasync function load_data(url, invalid) {\n\tconst data_url = new URL(url);\n\tdata_url.pathname = add_data_suffix(url.pathname);\n\tif (DEV && url.searchParams.has('x-sveltekit-invalidated')) {\n\t\tthrow new Error('Cannot used reserved query parameter \"x-sveltekit-invalidated\"');\n\t}\n\tdata_url.searchParams.append(\n\t\t'x-sveltekit-invalidated',\n\t\tinvalid.map((x) => (x ? '1' : '')).join('_')\n\t);\n\n\tconst res = await native_fetch(data_url.href);\n\tconst data = await res.json();\n\n\tif (!res.ok) {\n\t\t// error message is a JSON-stringified string which devalue can't handle at the top level\n\t\tthrow new Error(data);\n\t}\n\n\t// revive devalue-flattened data\n\tdata.nodes?.forEach((/** @type {any} */ node) => {\n\t\tif (node?.type === 'data') {\n\t\t\tnode.data = devalue.unflatten(node.data);\n\t\t\tnode.uses = {\n\t\t\t\tdependencies: new Set(node.uses.dependencies ?? []),\n\t\t\t\tparams: new Set(node.uses.params ?? []),\n\t\t\t\tparent: !!node.uses.parent,\n\t\t\t\troute: !!node.uses.route,\n\t\t\t\turl: !!node.uses.url\n\t\t\t};\n\t\t}\n\t});\n\n\treturn data;\n}\n\n/**\n * @param {unknown} error\n * @param {import('types').NavigationEvent} event\n * @returns {import('../../../types/private.js').MaybePromise<App.Error>}\n */\nfunction handle_error(error, event) {\n\tif (error instanceof HttpError) {\n\t\treturn error.body;\n\t}\n\treturn (\n\t\thooks.handleError({ error, event }) ??\n\t\t/** @type {any} */ ({ message: event.route.id != null ? 'Internal Error' : 'Not Found' })\n\t);\n}\n\nfunction reset_focus() {\n\tconst autofocus = document.querySelector('[autofocus]');\n\tif (autofocus) {\n\t\t// @ts-ignore\n\t\tautofocus.focus();\n\t} else {\n\t\t// Reset page selection and focus\n\t\t// We try to mimic browsers' behaviour as closely as possible by targeting the\n\t\t// first scrollable region, but unfortunately it's not a perfect match — e.g.\n\t\t// shift-tabbing won't immediately cycle up from the end of the page on Chromium\n\t\t// See https://html.spec.whatwg.org/multipage/interaction.html#get-the-focusable-area\n\t\tconst root = document.body;\n\t\tconst tabindex = root.getAttribute('tabindex');\n\n\t\troot.tabIndex = -1;\n\t\troot.focus({ preventScroll: true });\n\n\t\tsetTimeout(() => {\n\t\t\tgetSelection()?.removeAllRanges();\n\t\t});\n\n\t\t// restore `tabindex` as to prevent `root` from stealing input from elements\n\t\tif (tabindex !== null) {\n\t\t\troot.setAttribute('tabindex', tabindex);\n\t\t} else {\n\t\t\troot.removeAttribute('tabindex');\n\t\t}\n\t}\n}\n\nif (DEV) {\n\t// Nasty hack to silence harmless warnings the user can do nothing about\n\tconst console_warn = console.warn;\n\tconsole.warn = function warn(...args) {\n\t\tif (\n\t\t\targs.length === 1 &&\n\t\t\t/<(Layout|Page|Error)(_[\\w$]+)?> was created (with unknown|without expected) prop '(data|form)'/.test(\n\t\t\t\targs[0]\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconsole_warn(...args);\n\t};\n}\n","import { DEV } from 'esm-env';\nimport { create_client } from './client.js';\nimport { init } from './singletons.js';\nimport { set_paths, set_version } from '../shared.js';\nimport { set_public_env } from '../env-public.js';\n\n/**\n * @param {{\n *   env: Record<string, string>;\n *   hydrate: Parameters<import('./types').Client['_hydrate']>[0];\n *   paths: {\n *     assets: string;\n *     base: string;\n *   },\n *   target: HTMLElement;\n *   version: string;\n * }} opts\n */\nexport async function start({ env, hydrate, paths, target, version }) {\n\tset_public_env(env);\n\tset_paths(paths);\n\tset_version(version);\n\n\tif (DEV && target === document.body) {\n\t\tconsole.warn(\n\t\t\t`Placing %sveltekit.body% directly inside <body> is not recommended, as your app may break for users who have certain browser extensions installed.\\n\\nConsider wrapping it in an element:\\n\\n<div style=\"display: contents\">\\n  %sveltekit.body%\\n</div>`\n\t\t);\n\t}\n\n\tconst client = create_client({\n\t\ttarget,\n\t\tbase: paths.base\n\t});\n\n\tinit({ client });\n\n\tif (hydrate) {\n\t\tawait client._hydrate(hydrate);\n\t} else {\n\t\tclient.goto(location.href, { replaceState: true });\n\t}\n\n\tclient._start_router();\n}\n"],"names":["normalize_path","path","trailing_slash","decode_pathname","pathname","decode_params","params","key","tracked_url_properties","make_trackable","url","callback","tracked","property","value","disable_hash","DATA_SUFFIX","add_data_suffix","hash","i","buffer","native_fetch","input","init","cache","build_selector","initial_fetch","resource","opts","selector","script","body","ttl","subsequent_fetch","resolved","cached","param_pattern","parse_route_id","id","get_route_segments","segment","rest_match","optional_match","parts","content","escape","code","match","is_optional","is_rest","name","matcher","affects_path","route","exec","matchers","result","values","buffered","param","j","next","str","parse","nodes","server_loads","dictionary","layouts_with_server_load","leaf","layouts","errors","pattern","n","create_layout_loader","create_leaf_loader","uses_server_data","switch_value","ctx","create_if_block_1","insert_hydration","target","div","anchor","create_if_block","stores","$$props","page","components","form","data_0","data_1","data_2","data_3","afterUpdate","mounted","navigated","title","onMount","unsubscribe","$$invalidate","__vitePreload","hooks","error","HttpError","status","Redirect","location","unwrap_promises","object","_a","UNDEFINED","HOLE","NAN","POSITIVE_INFINITY","NEGATIVE_INFINITY","NEGATIVE_ZERO","unflatten","parsed","hydrate","hydrated","index","standalone","set","map","obj","array","compact","arr","val","routes","default_layout_loader","default_error_loader","scroll_positions","SCROLL_KEY","update_scroll_positions","scroll_state","create_client","base","container","invalidated","load_cache","callbacks","current","started","autoscroll","updating","navigating","hash_navigating","force_invalidation","root","current_history_index","INDEX_KEY","scroll","token","pending_invalidate","invalidate","intent","get_navigation_intent","update","goto","noScroll","replaceState","keepFocus","state","invalidateAll","redirect_chain","nav_token","get_base_uri","navigate","preload_data","load_route","preload_code","pathnames","promises","r","load","navigation_result","server_fallback","handle_error","load_root_error_page","_b","native_navigation","details","change","initialize","keepfocus","reset_focus","tick","deep_linked","style","Root","navigation","fn","get_navigation_result_from_branch","branch","slash","node","branch_node","data","data_changed","p","prev","load_node","loader","parent","server_data_node","uses","depends","deps","dep","href","load_input","requested","_c","has_changed","parent_changed","route_changed","url_changed","create_data_node","previous","invalidating","loaders","server_data","invalid_server_nodes","acc","invalid","load_data","server_data_nodes","branch_promises","err","error_load","load_nearest_error_page","root_layout","root_error","is_external_url","before_navigate","type","delta","should_block","cancellable","accepted","blocked","setup_preload","mousemove_timeout","event","preload","tap","observer","entries","entry","element","priority","a","find_anchor","external","get_link_info","options","get_router_options","after_navigate","PRELOAD_PRIORITIES","props","e","nonhash","submitter","event_form","noscroll","reload","submitter_name","link","node_ids","data_url","x","res","devalue.unflatten","autofocus","tabindex","start","env","paths","version","set_paths","set_version","client"],"mappings":"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"}