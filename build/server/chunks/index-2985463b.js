let o=class{constructor(t,e){this.status=t,typeof e=="string"?this.body={message:e}:e?this.body=e:this.body={message:`Error: ${t}`};}toString(){return JSON.stringify(this.body)}},c=class{constructor(t,e){this.status=t,this.location=e;}},h=class{constructor(t,e){this.status=t,this.data=e;}};function l(n,t){if(isNaN(n)||n<400||n>599)throw new Error(`HTTP error status codes must be between 400 and 599 â€” ${n} is invalid`);return new o(n,t)}function g(n,t){const e=JSON.stringify(n),s=new Headers(t?.headers);return s.has("content-length")||s.set("content-length",r.encode(e).byteLength.toString()),s.has("content-type")||s.set("content-type","application/json"),new Response(e,{...t,headers:s})}const r=new TextEncoder;function f(n,t){const e=new Headers(t?.headers);return e.has("content-length")||e.set("content-length",r.encode(n).byteLength.toString()),new Response(n,{...t,headers:e})}

export { c, f, g, h, l, o };
//# sourceMappingURL=index-2985463b.js.map
